// win-decoration.go

/*
	This software use gotk3 that is licensed under the ISC License:
	https://github.com/gotk3/gotk3/blob/master/LICENSE

	Copyright Â©2020 H.F.M - window package github.com/hfmrow
	This program comes with absolutely no warranty. See the The MIT
	License (MIT) for details:
	https://opensource.org/licenses/mit-license.php
*/

/*
   #status_bar_box GtkLabel:insensitive {
        color: rgba(255,255,255,0);
        transition: 500ms ease-in-out;
   }

   #status_bar_box GtkButton:insensitive {
       background: rgba(255,255,255,0);
       transition: 500ms ease-in-out;
   }
*/

package window

import (
	"time"

	"github.com/gotk3/gotk3/gdk"
	"github.com/gotk3/gotk3/glib"
	"github.com/gotk3/gotk3/gtk"

	gipf "github.com/hfmrow/gtk3Import/pixbuff"
)

// WinDecorationStructure: structure to hold methods and
// bahaviors for the window decoration.
type WinDecorationStructure struct {
	eventResize,
	eventMinimize,
	eventRoot *gtk.EventBox

	window           *gtk.Window
	signalHandleMove glib.SignalHandle
	signalHandleMoveIsBlocked,
	isTitleDisplayed bool

	imgMinimize,
	imgResize,
	imgRoot *gtk.Image

	DefaultCssName, // Can be used inside additional CSS builds definition.

	AdditionalCss string
	CallbackALTPressed func(isTitleDisplayed bool)
}

// WinDecorationStructureNew: create a new structure to hold
// decorations methods and manage behaviors.
func WinDecorationStructureNew(
	window *gtk.Window,
	eventResize,
	eventMinimize,
	eventRoot *gtk.EventBox) (wds *WinDecorationStructure, err error) {

	wds = new(WinDecorationStructure)

	wds.window = window
	wds.eventResize = eventResize
	wds.eventMinimize = eventMinimize
	wds.eventRoot = eventRoot
	wds.CallbackALTPressed = nil

	// Setting EventBox property
	wds.eventBoxProps(wds.eventResize, gtk.ALIGN_START, gtk.ALIGN_END, false, true)
	wds.eventBoxProps(wds.eventMinimize, gtk.ALIGN_END, gtk.ALIGN_START, false, false)
	wds.eventBoxProps(wds.eventRoot, gtk.ALIGN_START, gtk.ALIGN_START, false, false)

	wds.DefaultCssName = "mainWindowName"
	if tmpName, err := wds.window.GetName(); err == nil {
		if len(tmpName) > 0 {
			wds.DefaultCssName = tmpName
		}
	} else {
		return nil, err
	}

	if wds.imgRoot, err = wds.makeImg(rootTermIco, 24, wds.eventRoot); err == nil {
		if wds.imgResize, err = wds.makeImg(resizeIco, 18, wds.eventResize); err == nil {
			if wds.imgMinimize, err = wds.makeImg(minimizeIco, 12, wds.eventMinimize); err == nil {
				wds.window.SetOpacity(0)
				wds.window.ShowAll()
				if err = wds.winResizer(); err == nil {
					if err = wds.winMove(); err == nil {
						wds.winMinimize()
						wds.window.SetDecorated(false)
					}
				}
				wds.window.Hide()
				wds.window.SetOpacity(1)
			}
		}
	}

	if err != nil {
		return nil, err
	}
	return wds, nil
}

// TransparentBackground: Make background window transparent using
// r, g, b -> colors 0-255 and, a -> alpha as float 0.0 - 1.0
// Note: Window's CSS name is changed to match the embeded one.
// Note1: The targeted window must not been shown before 1st call.
func (wds *WinDecorationStructure) TransparentBackground(foreground, background *gdk.RGBA) (err error) {

	var (
		screen *gdk.Screen
		visual *gdk.Visual
	)
	css := `#` + wds.DefaultCssName + ` {
background-color: ` + background.String() + `;
}
#` + wds.DefaultCssName + ` {
color: ` + foreground.String() + `;
}
`
	wds.window.SetName(wds.DefaultCssName)
	if err = wds.CssApply(css); err == nil {
		if err = wds.CssApply(wds.AdditionalCss); err == nil {
			screen = wds.window.GetScreen()
			if visual, err = screen.GetRGBAVisual(); err == nil {
				wds.window.SetVisual(visual)
				wds.window.Show()
			}
		}
	}
	return
}

// CssApply:
func (wds *WinDecorationStructure) CssApply(cssIn string) (err error) {

	if len(cssIn) > 0 {
		var (
			cssProv *gtk.CssProvider
			screen  *gdk.Screen
		)

		if cssProv, err = gtk.CssProviderNew(); err == nil {
			if err = cssProv.LoadFromData(cssIn); err == nil {
				if screen, err = gdk.ScreenGetDefault(); err == nil {
					gtk.AddProviderForScreen(screen, cssProv, gtk.STYLE_PROVIDER_PRIORITY_APPLICATION)
				}
			}
		}
	}
	return
}

// WidgetFader: Provide fadeIn or fadeOut in seconds using
// the given widget. NOTE: the timer is not really accurate,
// using 10sec timer, the real time passed is 10sec +- 580ms.
// Not really a problem for simple splash screen or similar.
func (wds *WinDecorationStructure) WidgetFader(
	iWidget gtk.IWidget,
	seconds float64,
	callbackDone func(),
	fadeOut ...bool) {

	var (
		fadeIn  = !(len(fadeOut) > 0 && fadeOut[0])
		t       = 100000 * seconds
		inc     = 100 / t
		ticker  = time.NewTicker(time.Duration(t))
		opacity float64
		done    = make(chan bool)

		fade = func(opac float64) {
			if opacity >= 0 && opacity <= 1 {

				glib.IdleAdd(func() {
					iWidget.ToWidget().SetOpacity(opac)
				})
			}
		}
	)
	go func() {
		for opacity <= 1 {
			opacity += inc
			select {
			case <-done:
				if fadeIn {
					fade(1)
				} else {
					fade(0)
					iWidget.ToWidget().SetVisible(false)
				}
				return
			case <-ticker.C:
				if fadeIn {
					fade(opacity)
				} else {
					fade(1 - opacity)
				}
			}
		}
		ticker.Stop()
		if callbackDone != nil {
			callbackDone()
		}
		done <- true
	}()
}

// SplashWin: display a splash window with image inside it.
func (wds *WinDecorationStructure) SplashWin(image *gtk.Image, text string) (err error) {

	var (
		splash      *gtk.Window
		box         *gtk.Box
		scrolledWin *gtk.ScrolledWindow
		hAdj, vAdj  *gtk.Adjustment
		textView    *gtk.TextView
		buffer      *gtk.TextBuffer
	)

	if splash, err = gtk.WindowNew(gtk.WINDOW_POPUP); err == nil {

		// Avoiding black display instead of transparent (on rounded corners)
		screen := splash.GetScreen()
		visual, _ := screen.GetRGBAVisual()
		splash.SetVisual(visual)
		splash.SetDecorated(false)

		splash.SetPosition(gtk.WIN_POS_CENTER)
		splash.Resize(480, 240)

		if box, err = gtk.BoxNew(gtk.ORIENTATION_VERTICAL, 0); err == nil {
			if hAdj, err = gtk.AdjustmentNew(0, 0, 0, 0, 0, 0); err == nil {
				if vAdj, err = gtk.AdjustmentNew(0, 0, 0, 0, 0, 0); err == nil {
					if scrolledWin, err = gtk.ScrolledWindowNew(hAdj, vAdj); err == nil {
						if textView, err = gtk.TextViewNew(); err == nil {
							if buffer, err = textView.GetBuffer(); err == nil {

								buffer.SetText(text)
								box.PackStart(image, true, true, 0)
								scrolledWin.Add(textView)
								box.PackStart(scrolledWin, true, true, 0)
								splash.Add(box)
								splash.ShowAll()

								wds.WidgetFader(splash, 2, func() {

									splash.Connect("button-press-event",
										func(eventBox *gtk.EventBox, event *gdk.Event) bool {
											// eventButton := gdk.EventButtonNewFromEvent(event)
											// x, y := eventButton.MotionValRoot()
											// wds.window.BeginMoveDrag(
											// 	eventButton.Button(),
											// 	int(x), int(y),
											// 	eventButton.Time())

											wds.WidgetFader(splash, 1, func() {
												splash.SetVisible(false)
											}, true)
											return false
										})
								})
							}
						}
					}
				}
			}
		}
	}

	return
}

// SignalHandleBlockUnblock: Block / unblock the MOVING window
// signal for a given Widget. NOTE: Does not work well on TextView,
// the use of his ScrolledWindow container is required.
func (wds *WinDecorationStructure) SignalHandleBlockUnblock(
	ifaceWdgt gtk.IWidget,
	callbackEnter,
	callbackLeave func()) {

	ifaceWdgt.ToWidget().Connect("enter-notify-event",

		func(iWdgt gtk.IWidget) {
			wds.window.HandlerBlock(wds.signalHandleMove)
			wds.signalHandleMoveIsBlocked = true
			if callbackEnter != nil {
				callbackEnter()
			}
		})

	ifaceWdgt.ToWidget().Connect("leave-notify-event",

		func(iWdgt gtk.IWidget) {
			if wds.signalHandleMoveIsBlocked {
				wds.signalHandleMoveIsBlocked = false
				wds.window.HandlerUnblock(wds.signalHandleMove)
			}
			if callbackLeave != nil {
				callbackLeave()
			}
		})
}

// WinMinimize: define minimize behavior
func (wds *WinDecorationStructure) winMinimize() {

	if wds.eventMinimize != nil {
		// Set signals
		wds.eventMinimize.Connect("button-release-event", func(
			eb *gtk.EventBox,
			event *gdk.Event) bool {

			clickEvent := gdk.EventButtonNewFromEvent(event)
			if clickEvent.Button() == gdk.BUTTON_PRIMARY {
				wds.window.Iconify()
				return true
			}
			return false
		})

		wds.SignalHandleBlockUnblock(
			wds.eventMinimize,
			func() { gipf.SetPict(wds.imgMinimize, minimizeIco, 14) },
			func() { gipf.SetPict(wds.imgMinimize, minimizeIco, 12) })
	}
}

// WinMove: Handling moving window functionality
func (wds *WinDecorationStructure) winMove() (err error) {

	// Handling button pressed for moving window
	wds.signalHandleMove = wds.window.Connect("button-press-event",

		func(eventBox *gtk.EventBox, event *gdk.Event) bool {
			eventButton := gdk.EventButtonNewFromEvent(event)

			if eventButton.Button() == gdk.BUTTON_PRIMARY {

				x, y := eventButton.MotionValRoot()
				wds.window.BeginMoveDrag(
					eventButton.Button(),
					int(x), int(y),
					eventButton.Time())

				return true
			}
			return false
		})

	// Handling key (alt) pressed for display title window
	wds.window.Connect("key-press-event",

		func(window *gtk.Window, event *gdk.Event) bool {
			eventKey := gdk.EventKeyNewFromEvent(event)
			if eventKey.KeyVal() == gdk.KEY_Alt_L {

				if wds.CallbackALTPressed != nil {
					wds.CallbackALTPressed(!wds.isTitleDisplayed)
				}

				if !wds.isTitleDisplayed {
					wds.window.SetDecorated(true)
					wds.isTitleDisplayed = true
				} else {
					wds.window.SetDecorated(false)
					wds.isTitleDisplayed = false
				}
				return true
			}
			return false
		})

	// Handling button release for hiding title window
	wds.window.Connect("button-release-event",

		func(window *gtk.Window, event *gdk.Event) bool {
			eventButton := gdk.EventButtonNewFromEvent(event)
			if eventButton.Type() == gdk.EVENT_BUTTON_RELEASE {
				wds.window.SetDecorated(false)
				return true
			}
			return false
		})

	return
}

// WinResizer: Display resize cursor on hovering over resize image
func (wds *WinDecorationStructure) winResizer() (err error) {

	if wds.eventResize != nil {

		var (
			gWindow  *gdk.Window
			gDisplay *gdk.Display
			gCursor  *gdk.Cursor
		)
		// Resizing window signal
		wds.eventResize.Connect("button-press-event",

			func(eventBox *gtk.EventBox, event *gdk.Event) bool {
				eventButton := gdk.EventButtonNewFromEvent(event)
				x, y := eventButton.MotionValRoot()

				wds.window.BeginResizeDrag(
					gdk.WINDOW_EDGE_SOUTH_WEST,
					eventButton.Button(),
					int(x), int(y),
					eventButton.Time())

				return true
			})

		if gWindow, err = wds.imgResize.GetWindow(); err == nil {
			if gDisplay, err = gdk.DisplayGetDefault(); err == nil {
				if gCursor, err = gdk.CursorNewFromName(gDisplay, "sw-resize"); err == nil {

					gWindow.SetCursor(gCursor)
				}
			}
		}
	}

	return
}

// WinDispRootImg: Display icon ROOT if needed
func (wds *WinDecorationStructure) WinDispRootImg(isRoot bool) {

	if isRoot {
		wds.imgRoot.SetVisible(true)
	} else {
		wds.imgRoot.SetVisible(false)
	}
}

// eventBoxProps: define EventBox property
func (wds *WinDecorationStructure) eventBoxProps(
	eBox *gtk.EventBox,
	halign, valign gtk.Align,
	hexpand, vexpand bool) {

	// Set EventBox property
	if eBox != nil {
		eBox.SetProperty("halign", halign)
		eBox.SetProperty("valign", valign)
		eBox.SetProperty("hexpand", hexpand)
		eBox.SetProperty("vexpand", vexpand)
	}
}

// makeImg: Image initialisation
func (wds *WinDecorationStructure) makeImg(
	imgData interface{},
	size int,
	eBox *gtk.EventBox) (img *gtk.Image, err error) {

	if img, err = gtk.ImageNew(); err == nil {
		if err = gipf.SetPict(img, imgData, size); err == nil {

			img.SetVisible(true)
			if eBox != nil {

				eBox.Add(img)
			}
		}
	}
	return
}

// Images data
var (
	minimizeIco = gipf.HexToBytes("minimizeico", []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x00\x20\x03\xdf\xfc\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x12\x00\x00\x0b\x12\x01\xd2\xdd\x7e\xfc\x00\x00\x02\xd2\x49\x44\x41\x54\x58\x85\xc5\xd7\x3b\x6f\x13\x41\x10\x07\xf0\x9f\x0f\x13\xde\xaf\x88\x12\x09\x82\x00\x51\x45\x14\x01\x29\x12\x88\x82\x9a\x06\x1a\x1a\xa0\xe4\x33\x50\xf1\x31\xa8\x09\x12\x1d\x0f\x89\x02\x0a\x8a\x20\x0a\x88\xa0\xa0\x26\xa0\xa4\xa1\xe1\x91\x10\x89\xa7\x70\x62\x8a\x9d\xc5\x17\x73\x76\xce\x21\x81\x91\x4e\xf6\xed\xce\xfc\xff\x3b\xb3\x73\xb3\xb3\x0d\xfd\xa5\x81\x02\x4b\x68\xc7\xd8\x26\x1c\xc1\x08\x76\xc7\xd8\x27\xcc\xe0\x15\x7e\xf4\xb1\x1d\x48\x32\x00\x0c\xe1\x1c\xee\xe0\x5d\x90\x7c\xc5\x42\x3c\x5f\x63\xec\x5d\xe8\x9c\x0b\x1b\x81\xd1\x18\x94\x7c\x43\x18\x35\x70\x19\x6f\xc3\x8b\x67\xb8\x8a\x33\x38\x88\xbd\xf1\x1c\x8c\xb1\xab\xa1\xd3\x0e\x9b\xcb\x25\x9c\x0d\x75\xc9\x9b\xf1\xbb\x0f\x93\x01\x76\x13\x47\x63\xbc\x9f\x37\x79\xee\x68\xd8\xb4\x03\x63\x5f\x17\x76\x4f\xc9\xab\x3c\x8e\x8f\xd2\xbe\x9e\x28\x81\x37\x02\xa4\x1c\xa1\xb2\x87\xcd\xd2\xbb\xb0\x9d\x09\xac\xb1\x2e\x8e\xbe\xe4\xdf\xf1\x00\xdb\x4a\x2b\x2f\xaa\x8c\x7a\x48\xa1\xe3\xed\x76\x3c\x0c\xcc\x9e\x8b\xc8\xe0\xfb\xf1\x3e\x0c\x72\xf2\xd4\xde\xbb\x0a\xc9\x91\x2a\x02\xf3\x7d\x70\x94\x39\xd1\x09\xd9\x24\x5e\x63\x47\x95\xd2\x2a\x25\x63\xec\xc0\x74\x70\x94\x39\x7f\x7b\x78\x49\x4a\x9a\xf1\xae\xf1\xb5\x90\x8c\x35\x1e\x1c\x97\xba\x39\x9a\x52\xb2\x4c\xac\x03\x79\xf7\x22\x26\x82\x6b\xd9\x17\x71\x3e\x56\x36\x1a\xef\x6b\x11\xfa\x6e\xc9\x98\xa3\xc1\x75\xbe\x3c\x79\x1b\x53\xf1\x7f\xe0\xaa\x35\x80\x64\xec\xa9\xe0\x54\x60\x33\x4e\xe2\x6e\x4c\xae\x47\xf8\xb3\x64\xec\x7b\xc1\xb9\xb9\xc0\x61\xec\xc2\x8b\x98\x5c\x5a\xc7\x05\x64\xec\xe7\xc1\x79\xa8\xc0\x81\x98\x98\x89\xc9\x55\x9d\x5c\x35\x25\x63\xcf\x04\xe7\x48\x13\xc3\xf8\x29\x9d\x6a\x55\xf2\x37\x39\xd1\xcb\x99\x85\xe0\x1c\x5e\xf1\x70\xe8\x03\xf2\xb7\xd2\x46\xbb\x89\x39\x6c\x94\xf6\xe4\x43\x85\xe2\x46\x29\x0a\x83\xe6\x46\x11\x24\x3f\x2b\xe6\x76\x49\xfd\xc2\x7c\x13\xb3\xa1\x3c\x82\x37\x3a\x21\x6f\x63\x0b\xee\xe3\x18\x16\xd5\xdf\x8e\xb6\x94\xf1\x2f\x71\x16\xdf\x74\x4e\xc9\x76\x70\x15\x98\x6d\x4a\xf5\x79\x41\x3a\xa9\x1e\xc5\xc4\x62\x00\x6d\x95\xca\xe7\x7d\x3c\x96\x4e\xc7\x95\x22\x51\xe0\x0b\x4e\x07\xf9\xb6\x58\x40\x9e\x5b\x92\x4e\xdc\x85\xe0\xc6\x9f\x85\x28\x7b\xba\x47\xea\xf7\x2e\xc4\x7b\x9d\x1a\x91\x75\x2e\x84\xed\x9e\x0a\xdc\x65\x85\x08\x6e\x49\xcd\x43\x2e\x93\xe5\x52\xdc\x90\x8a\x95\xf8\xad\xf3\x64\xdd\xf2\x96\xe5\x9c\x18\x0d\xae\x5b\x4a\x0a\x79\x2b\x9e\x48\x27\x55\x13\x2d\xe9\x13\x9d\x96\x9a\x8a\xb9\x9a\x11\x20\x6d\xe1\x30\x3e\x4b\x85\x6e\xae\x84\x39\x81\x53\x31\xde\xca\xed\x55\x0b\xd7\x70\x03\xd7\xf1\x34\xc6\xe7\x71\x45\x2a\x56\x2d\x83\x25\x61\x4e\xf0\xf9\x12\xc7\x38\x2e\x4a\xcd\x6a\xab\xec\x50\xb9\x21\x99\xb6\x3e\x0d\xc9\x4e\xa9\xd9\x99\xec\xe2\x5c\xa6\x54\xd5\x92\x0d\x85\x37\xab\x79\x86\xd4\x6c\xc9\xe8\x84\x63\x4c\x6a\x20\x1f\xfa\x87\x4d\x69\xd5\x22\xd6\xaa\x2d\x9f\x55\xb3\x2d\xcf\xf2\x5f\x2f\x26\x59\x7a\x5d\xcd\xa6\xac\x7c\x35\x9b\xd2\xb9\x9a\xe5\xe6\x73\x55\xed\xfd\x3f\xb9\x9c\xae\xf4\x5d\xd7\xb9\x9e\x37\xa4\x6f\xbd\xd7\xf5\x7c\x51\x1f\xf9\x05\xd0\x9d\xb8\xef\x82\x66\xdd\xd8\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x57\x38\xc1\x45\x20\x03\x00\x00"))
	resizeIco   = gipf.HexToBytes("resizeico", []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x00\x36\x0a\xc9\xf5\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x12\x00\x00\x0b\x12\x01\xd2\xdd\x7e\xfc\x00\x00\x09\xe8\x49\x44\x41\x54\x58\x85\xad\x57\x5d\x6c\x14\xd7\x15\x3e\xf7\xde\xf9\xdb\x1d\x7b\x6d\xd6\xbe\x56\x6d\xc6\xc6\x5e\xb0\xd7\x84\x86\xa0\x18\x43\x8d\x8c\x43\x55\x27\x0a\x76\xd4\x26\x01\x94\x3f\x54\x89\xe6\xa1\x52\xd5\xf6\xa5\x0f\x7d\xaa\xaa\x4a\x55\xa5\x28\x2a\x52\xd5\x37\x92\xfe\x00\x06\xb7\x05\x05\x77\x15\x0c\xa6\x18\xe2\xd0\xc5\x18\x44\x61\xcd\xda\xb0\x90\x35\xb2\xb3\x2d\x4b\x26\x60\x33\x6b\xaf\x99\x9f\x7b\x6f\x1f\x3c\x63\x36\xa4\x51\x13\xb5\xf7\x65\xf6\xce\xde\x99\xfb\x9d\xef\x7c\xe7\x3b\x77\xd0\xc1\x83\x07\x6f\x22\x84\x74\x00\x78\xc8\x39\x9f\xe5\x9c\x7f\x6a\xdb\x76\x76\x7a\x7a\xfa\xba\xeb\xba\xe9\x5b\xb7\x6e\x5d\x4d\x26\x93\x73\x00\x00\xa6\x69\x02\x00\x60\xc3\x30\x50\x2e\x97\x63\xf0\x7f\x18\xe8\xd0\xa1\x43\x62\x79\x82\xd0\xf2\x15\x63\x0c\x00\xe0\xb9\xae\xfb\x49\xa1\x50\x18\xcb\xe5\x72\xa7\x32\x99\xcc\xe0\xd1\xa3\x47\x67\x28\xa5\xc8\x34\x4d\x30\x0c\x03\xff\xaf\x40\xd0\xa1\x43\x87\xf8\x63\xf7\x04\x00\x08\x21\x04\x02\x00\x8c\x31\x06\x84\x10\x48\x92\x04\xae\xeb\x16\x17\x16\x16\x86\xae\x5f\xbf\xfe\xce\xd0\xd0\xd0\xa9\x89\x89\x09\x06\x00\x98\x52\x0a\xa6\x69\x3e\xfe\x9e\x2f\x07\xa0\xaf\xaf\xcf\x2d\x9d\xa3\x25\x1a\xd0\x67\x10\x09\xc1\xfd\x3f\x09\xc6\x58\x10\x42\xd0\xfc\xfc\xfc\xc5\x89\x89\x89\x5f\x9d\x3c\x79\x32\x31\x31\x31\x21\x28\xa5\xc4\x07\x21\xe0\x2b\x0c\xd4\xdf\xdf\xff\xb9\x07\x84\x10\xc0\x39\x07\x00\x60\x00\x20\x10\x42\xc4\x07\x25\x7c\x30\x88\x10\x82\x09\x21\x60\x59\xd6\xdf\x52\xa9\xd4\x4f\x8e\x1d\x3b\x76\x2d\x97\xcb\x11\x4a\xa9\xf8\x2a\x6c\x90\xee\xee\xee\x0a\xdb\xb6\x2f\xdb\xb6\xfd\x0f\xc6\x58\x96\x73\x3e\x2b\x84\xc0\xaa\xaa\xea\xb2\x2c\x4b\x08\x21\x2c\x84\x40\xfe\xc6\x02\x21\x44\x10\x42\x88\x73\xce\x19\x63\x5c\x55\xd5\x35\x4d\x4d\x4d\x7b\x9a\x9b\x9b\x21\x95\x4a\x7d\x68\x9a\xa6\xa0\x94\xe2\x62\xb1\xf8\xa5\x98\x40\x86\x61\x2c\x4f\x14\x45\x01\x59\x96\x91\xae\xeb\x7a\x47\x47\xc7\xea\xf2\xf2\xf2\xf6\x86\x86\x86\x67\x2a\x2a\x2a\xbe\x25\xcb\x72\x2d\x63\x0c\x18\x63\x41\x3a\xb0\xcf\x16\x03\x00\x90\x65\x99\x14\x0a\x85\xd3\x43\x43\x43\x7b\x8e\x1c\x39\x92\x33\x0c\x43\xca\xe5\x72\xde\x7f\x05\x00\x00\x52\xc0\xbc\x7f\x5d\x56\xb5\xaf\x76\xb1\x73\xe7\xce\x68\x4b\x4b\xcb\x0b\xb1\x58\xec\xcd\x48\x24\xb2\x95\x31\x86\x18\x63\xcc\x07\x11\xa4\x86\x49\x92\x24\x31\xc6\x66\x8e\x1f\x3f\xfe\xed\xc3\x87\x0f\xa7\xbe\x0c\x88\xe5\xdc\xfa\x57\x64\x18\x06\x8e\x44\x22\x28\x12\x89\x60\x49\x92\xb0\x65\x59\x68\x72\x72\xb2\x78\xee\xdc\xb9\x54\x36\x9b\xdd\xaf\x28\x4a\x72\xc5\x8a\x15\x4d\xe1\x70\xb8\x91\x73\xbe\x54\x2e\x08\x61\x84\x10\xe6\x9c\x33\x42\xc8\x8a\x96\x96\x96\x1d\xaa\xaa\x7e\x98\x4c\x26\x3f\x36\x0c\x43\xb2\x2c\xeb\x0b\x35\x81\x62\xb1\xd8\xf2\xa4\x50\x28\x04\x66\xb3\x0c\xd0\x30\x0c\x04\x00\x1c\x00\x70\x2e\x97\xe3\x00\xc0\x63\xb1\x18\xd9\xb3\x67\xcf\xf7\xd6\xac\x59\xf3\x4b\x00\xa8\xf1\xd9\x20\x7e\x4a\x38\x21\x04\x73\xce\xef\x9d\x38\x71\xa2\xa7\xaf\xaf\xef\xa2\x61\x18\xe4\x8b\xfc\x02\xed\xdb\xb7\xef\x1d\x8c\xb1\x2e\x84\x58\x70\x1c\xe7\xfe\xf4\xf4\xf4\x94\xe3\x38\x13\x53\x53\x53\xe3\x89\x44\xc2\x2a\x49\x07\x51\x55\x95\xdb\xb6\x8d\x01\x00\x4c\xd3\x64\xbb\x76\xed\xaa\xef\xed\xed\x7d\x37\x1c\x0e\x3f\xe7\x38\x4e\x29\x08\x86\x31\x26\x00\xf0\xc9\xfb\xef\xbf\xff\xec\xe1\xc3\x87\xc7\xfd\x32\xfd\x1c\x88\xcf\x94\x61\x89\x03\x0a\xc7\x71\xfe\x55\x28\x14\x46\xa6\xa7\xa7\xdf\x9b\x9c\x9c\x1c\x4c\x24\x12\x8b\x94\x52\xec\x2f\xe5\x00\x20\x99\xa6\xe9\x75\x77\x77\xcb\xbd\xbd\xbd\xbf\x5e\xb9\x72\xe5\x8f\x7c\x10\x18\x00\x90\x10\x82\x11\x42\x08\xe7\x3c\x3b\x30\x30\xf0\xcd\x23\x47\x8e\x7c\x4c\x29\xc5\x8f\x97\x28\x79\xe9\xa5\x97\x7e\x26\x96\x06\xf7\x4b\x4b\x2c\x31\x8a\x22\xa1\x50\xe8\xeb\x2b\x57\xae\x7c\xa5\xb5\xb5\x75\xe7\xc6\x8d\x1b\x3d\xd7\x75\x27\xc6\xc7\xc7\x1d\x5d\xd7\x89\x69\x9a\x9c\x52\x8a\xd3\xe9\x34\x0c\x0d\x0d\x0d\xb6\xb5\xb5\xb9\xd5\xd5\xd5\xdd\x8c\x31\x5e\xa2\x09\x4f\x92\xa4\xea\x86\x86\x86\x96\x4c\x26\x73\x78\x66\x66\x26\xd0\xdb\x23\x00\x3b\x76\xec\xf8\x39\x7a\x34\x70\xf0\x03\x00\xc4\x12\x1e\x06\x08\xa1\x6a\x4a\xe9\x0b\xad\xad\xad\x3d\xf5\xf5\xf5\x99\x5b\xb7\x6e\xdd\xb6\x2c\x8b\x14\x8b\x45\x41\x29\x15\xba\xae\x4b\x89\x44\x62\xa4\xad\xad\xcd\xf3\x41\xb0\x52\x61\x86\x42\xa1\x78\x43\x43\xc3\xe2\xf0\xf0\xf0\xdf\x61\x49\xf8\xcb\x20\xc8\xae\x5d\xbb\x7e\x51\xb2\x29\xf2\x7b\x00\x43\x08\x09\x84\x90\x14\x80\x61\x8c\x71\x42\x48\x5d\x2c\x16\xfb\x6e\x4b\x4b\x8b\x72\xe3\xc6\x8d\xb3\x96\x65\x81\xae\xeb\xe0\xb3\x41\x12\x89\xc4\xc8\x96\x2d\x5b\x6a\x2a\x2b\x2b\x37\x97\x80\x40\x9c\x73\x14\x8d\x46\xbf\xa1\xaa\x6a\xe2\xda\xb5\x6b\x77\x4b\x8d\x8a\xf4\xf4\xf4\x6c\xf1\x3c\xef\x63\xcf\xf3\x3e\xc1\x18\x83\xa2\x28\x61\x8c\xb1\x04\x00\x98\x73\x2e\x00\x80\xfb\xee\x87\x85\x10\x9c\x31\x26\xaa\xaa\xaa\x9e\xe9\xe8\xe8\x68\x11\x42\x1c\xbf\x7a\xf5\x2a\xf3\xb5\x21\x8a\xc5\x22\x22\x84\x9c\x8a\xc7\xe3\x9d\xb2\x2c\xc7\x38\xe7\xcc\x7f\xce\x23\x84\x84\xea\xea\xea\x8c\x2b\x57\xae\xfc\x29\x9f\xcf\x3f\x4a\x41\x26\x93\xe9\x1b\x1b\x1b\x3b\x70\xf2\xe4\xc9\xdf\xcf\xcd\xcd\xed\x7b\xf0\xe0\xc1\x51\xdb\xb6\xd3\x9a\xa6\x29\x9a\xa6\x35\x20\x84\x24\xce\x39\x47\x08\x41\x10\x11\x63\x8c\x85\x42\xa1\xa7\x56\xaf\x5e\xfd\xa4\xe7\x79\xc7\x52\xa9\x94\xa7\xeb\x3a\xd2\x75\x1d\xa5\x52\x29\x16\x0a\x85\x46\xe3\xf1\xf8\xab\x00\x50\x06\xbe\x7d\x73\xce\xb9\xae\xeb\xad\x15\x15\x15\x63\xa3\xa3\xa3\x1f\x19\x86\x41\x2c\xcb\x12\xe4\xde\xbd\x7b\x92\x69\x9a\xc8\xb2\x2c\xb8\x71\xe3\x86\x3d\x36\x36\x96\x3f\x73\xe6\xcc\xa5\x74\x3a\x7d\x50\x51\x94\xc1\xca\xca\xca\x6a\x5d\xd7\x9f\xf8\x0f\xa6\xe3\x69\x9a\xf6\x44\x53\x53\x53\xe3\xcd\x9b\x37\x8f\xcd\xcc\xcc\xe0\x62\xb1\xc8\x29\xa5\xd2\xd8\xd8\x98\xd9\xd6\xd6\xe6\x54\x57\x57\x3f\x1f\x88\x32\xf0\x92\xca\xca\xca\xaf\x65\x32\x99\x83\xb7\x6f\xdf\x16\x81\xd1\xf0\xea\xea\x6a\x21\x49\x92\x28\x16\x8b\x01\x33\xd2\xec\xec\x2c\xbe\x74\xe9\xd2\x3f\xc7\xc6\xc6\xfe\xd2\xd4\xd4\x94\xa6\x94\x6e\xc3\x18\x97\x07\xb4\x06\x20\xc2\xe1\xf0\x86\xc6\xc6\x46\x38\x7d\xfa\xf4\x07\x25\xb5\x8e\xf2\xf9\xfc\xa5\xb6\xb6\xb6\x6e\x55\x55\x57\xf9\x0c\x12\xce\xb9\x08\x87\xc3\xab\x35\x4d\xfb\xe0\xc2\x85\x0b\xd3\x94\x52\x42\xde\x7a\xeb\xad\x77\xba\xba\xba\x5e\xd9\xb6\x6d\x5b\x77\x67\x67\xe7\x9a\xd6\xd6\x56\x61\xdb\xf6\x9d\xbb\x77\xef\x7a\x94\x52\x09\x00\xc8\xe0\xe0\x60\x5a\x51\x94\xf7\x62\xb1\x58\x97\x24\x49\x75\x25\x20\x10\x63\x0c\x28\xa5\x5d\xb5\xb5\xb5\x67\xce\x9e\x3d\x3b\x4d\x29\x25\xd1\x68\x14\x65\xb3\x59\xd6\xdc\xdc\x7c\xbf\xbe\xbe\xfe\x55\xc6\x98\xf0\xc5\xcc\x00\x00\x97\x95\x95\xc1\xc5\x8b\x17\xff\x6a\x9a\x26\x22\xbb\x77\xef\x4e\xa8\xaa\xba\x5e\xd3\xb4\xf6\xaa\xaa\xaa\xe7\x57\xad\x5a\xf5\x66\x7b\x7b\x7b\xcf\xd3\x4f\x3f\x3d\x9f\x4a\xa5\xd2\xf9\x7c\x9e\x1b\x86\xa1\x9c\x3f\x7f\xfe\x53\x42\xc8\x40\x4b\x4b\xcb\xb3\x84\x90\x5a\x21\x44\x60\x3a\x5c\x08\x41\x6a\x6a\x6a\x9a\x1d\xc7\xf9\x63\x2a\x95\xe2\xaa\xaa\x42\xb1\x58\x84\x85\x85\x85\x5b\x1b\x37\x6e\xdc\x2e\xcb\xb2\x21\x84\xe0\x41\x6b\x57\x14\xc5\xb0\x2c\xeb\x40\x26\x93\x99\xff\x8c\x11\x31\xc6\x04\xe7\x1c\xcb\xb2\x5c\x57\x53\x53\xb3\xb3\xa3\xa3\x63\x93\xa2\x28\x67\x2e\x5c\xb8\xf0\x20\x16\x8b\x29\xc9\x64\xd2\xd2\x34\x6d\x24\x1e\x8f\xef\x04\x80\x72\x5f\x60\x58\x08\xc1\x43\xa1\x50\x23\x63\x6c\x32\x99\x4c\x4e\x44\xa3\x51\xa2\xaa\x2a\xb9\x7d\xfb\x36\xdb\xbc\x79\x73\x45\x55\x55\xd5\x73\x81\x16\x84\x10\x5c\x55\x55\xdd\x71\x9c\x4b\xc9\x64\x72\x22\xb0\x56\xf0\x4b\x2d\x38\x6c\x08\xc7\x71\x3c\x5d\xd7\xb7\xbf\xf8\xe2\x8b\x23\xaf\xbd\xf6\x5a\x7c\x6a\x6a\xca\x31\x0c\x43\xe9\xef\xef\xbf\x9e\xcd\x66\x7f\x2a\x49\x12\x08\x21\x44\x60\xe1\x9e\xe7\x41\x73\x73\xf3\x0f\xd6\xad\x5b\x87\x72\xb9\x1c\x57\x55\x95\x03\x00\xcc\xcc\xcc\x0c\x70\xce\xe7\x4b\x0c\x88\x33\xc6\xa0\xb1\xb1\x71\x1b\xa5\x14\x30\xf1\x07\x42\x08\x09\x21\xb8\x7f\xc0\xc0\x08\x21\x89\x31\xe6\x12\x42\x9a\x7b\x7b\x7b\x8f\xbd\xfc\xf2\xcb\xb5\xb9\x5c\xce\xa1\x94\x92\xbe\xbe\xbe\xfd\x85\x42\x61\x98\x10\x82\x83\xf5\x8c\x31\x88\x44\x22\x5d\xdd\xdd\xdd\x5d\x50\xd2\xde\x93\xc9\xe4\x47\x8b\x8b\x8b\xe7\x09\x21\xe0\x7b\x0a\x16\x42\x40\x38\x1c\xde\x52\x5b\x5b\x2b\xe3\x85\x85\x85\xe1\x85\x85\x85\x61\xce\x79\x56\x51\x14\x84\x31\x26\x25\x87\x50\x99\x31\xe6\x49\x92\xb4\x76\xfb\xf6\xed\xbf\xf5\x5b\x37\xca\x64\x32\x90\x4e\xa7\xf7\xfa\x8d\x2b\x60\xd1\xe3\x9c\xa3\x78\x3c\xfe\x1d\x4a\x29\xe4\x72\x39\xa0\x94\x92\xf1\xf1\x71\xb8\x73\xe7\xce\x39\x42\x48\xc0\x18\xe2\x9c\x83\xaa\xaa\xab\x3b\x3b\x3b\x1b\x49\x3a\x9d\x3e\xb0\x7f\xff\xfe\x03\x8e\xe3\xbc\xeb\x38\xce\x87\xd1\x68\xb4\x51\xd3\xb4\x46\x3f\x67\xc8\x2f\x37\xae\xeb\xfa\xba\xb2\xb2\xb2\x4b\xc3\xc3\xc3\x19\x00\xc0\xc5\x62\x71\x6a\xd3\xa6\x4d\xbd\x92\x24\xd5\xf9\x91\x2d\x2d\xc6\x58\x4b\xa5\x52\xbf\x33\x4d\x93\x45\xa3\x51\x64\x59\x96\xd8\xb0\x61\x43\xd8\x30\x8c\xdd\x7e\x93\x03\x21\x04\x48\x92\xa4\xde\xbf\x7f\x7f\x04\x03\x80\x12\x8f\xc7\xb5\xab\x57\xaf\x2e\xbe\xfd\xf6\xdb\xa7\xfa\xfb\xfb\xbf\x99\xcf\xe7\xff\x20\xcb\x32\x0e\x98\xf0\x7b\x01\xac\x5d\xbb\xf6\xfb\x3e\x0b\x64\x7c\x7c\xdc\xcb\xe7\xf3\x83\x7e\x64\x1c\x00\x10\x63\x0c\x34\x4d\x5b\xdb\xd9\xd9\xd9\x08\xb0\x74\xc6\x04\x00\x98\x9f\x9f\xbf\xce\x39\x5f\x80\x47\xc7\x7d\xee\x7f\x6b\x34\x92\xbd\x7b\xf7\x5e\xe9\xea\xea\xfa\xf1\xd6\xad\x5b\x37\x95\x97\x97\x4f\x0c\x0c\x0c\x98\x8a\xa2\x9c\x6a\x6e\x6e\xee\x96\x24\xa9\x3e\xc8\x1b\xe7\x1c\x85\x42\xa1\x95\x18\xe3\x3f\x5f\xbe\x7c\xf9\x1e\x00\xc0\xfa\xf5\xeb\xb5\xfa\xfa\xfa\x37\x82\xc8\x00\x00\x24\x49\x92\x4d\xd3\x3c\x3d\x3a\x3a\x7a\x53\xd7\x75\x6c\x59\x96\x70\x5d\xd7\x6e\x6f\x6f\xdf\x2d\xcb\x72\x95\xef\xa6\x00\x00\x58\xd3\xb4\x29\xac\x69\xda\x93\xb2\x2c\xc7\xca\xcb\xcb\xdf\xe8\xe9\xe9\x39\xf1\xfa\xeb\xaf\xaf\x49\x24\x12\x8b\x93\x93\x93\xbf\xf1\x95\x0e\x3e\x72\x8e\x31\x2e\x8b\x44\x22\xed\x41\xe5\xb8\xae\x9b\x11\x42\x14\x1f\x8f\x4c\x96\xe5\x86\xa0\xb8\x00\x00\x6c\xdb\x76\x38\xe7\xa5\x67\x3d\x24\x84\x00\x59\x96\x6b\x31\xe7\x9c\x0b\x21\xc0\xf3\x3c\x5b\x96\xe5\xa6\xae\xae\xae\x1f\x02\x00\xcc\xcd\xcd\x8d\x70\xce\x67\x7d\x91\x09\xdf\xcb\xa1\xb2\xb2\x72\x55\xf0\x92\xe9\xe9\x69\xd3\x75\xdd\x39\x5f\x8c\xcb\xa9\xaa\xab\xab\xab\x06\x00\xc8\xe5\x72\x00\x00\xc8\x75\x5d\xee\xbf\x6b\xb9\x74\x7d\x91\x97\x63\x7f\x03\x8c\x10\x92\x39\xe7\x20\xcb\xf2\x53\x86\x61\xc0\xc8\xc8\xc8\xbd\x87\x0f\x1f\x9a\x7e\xf9\x08\x00\x00\xc6\x18\x44\xa3\xd1\x1a\xff\x5b\x02\x65\xb3\x59\xc7\xf3\xbc\x45\x9f\x52\xe1\x6f\x00\x92\x24\xe9\x94\xd2\xe5\x7d\x64\x59\x06\x00\x70\x4a\x18\x00\xbf\xbb\x92\x47\xd0\x7d\x64\x9c\xf3\xfb\xb6\x6d\x43\x49\xe4\xcb\x83\x10\x02\xb3\xb3\xb3\x9f\xfa\x91\x05\x9b\x3a\x8f\xaf\x79\xf0\xe0\xc1\x3d\xd3\x34\x21\x00\xe1\xba\x2e\x08\x21\x1e\x06\x6b\x30\xc6\x60\xdb\x36\x08\x21\xf0\xbf\x01\x54\x5b\x70\x94\xdc\x0f\xa1\xea\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xe7\xc8\x76\x41\x36\x0a\x00\x00"))
	rootTermIco = gipf.HexToBytes("roottermico", []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x96\x09\x54\x13\xd7\xfe\xc7\x27\x40\x52\x64\x51\x16\x6b\x5d\x68\x1d\x46\x6c\x51\x08\x99\x04\x02\x21\x26\x2c\x1a\xd0\xa8\x41\x40\x56\x1b\x94\x90\x0c\x24\x40\x66\xc2\xcc\x40\x42\xa4\x88\x80\x56\x36\xa9\xb5\x75\x69\x81\x52\xb4\x8a\xd5\x88\xd6\xa5\x52\x2c\x8b\x68\xa8\x02\xa2\xad\x50\x10\x90\xba\x54\x45\x45\x04\x04\x14\x3c\xf8\x3f\xa1\x62\xff\xed\x3b\xcf\xf7\x5e\xef\x39\xf7\x9c\xe4\xde\xcf\xef\x7b\xef\xfd\x7d\x7f\xf7\x9e\xc9\x09\x0c\x58\x6e\x69\x36\xd7\x0c\x00\x00\x4b\xe1\x0a\x41\x30\x00\x00\xa0\xa1\x9b\xd2\x00\x00\x20\xb4\xda\xa7\x00\x00\x4c\x53\xad\x88\x24\x00\x60\xe7\x7e\x43\xa7\x64\x8d\x84\x55\x02\x80\xc9\x90\x22\x24\x82\x8c\x10\xad\xe6\x4a\x31\xa5\x8b\x44\x86\xc5\x20\x2e\x1a\xa5\x0a\x30\x34\x9e\xb7\x46\x25\x91\x26\x20\x24\x18\x83\xc4\x29\x50\x3e\xd4\x5f\x55\x03\x81\x0a\x19\x1f\x0a\x67\x8b\x60\x91\x6a\x19\x22\x57\xac\xd0\xe2\xc8\x5a\x6d\x40\x88\x54\x9b\x20\xf5\x94\x41\xde\x5e\x20\x4f\xc3\xd5\x28\x55\x4a\x84\x94\x80\x1a\x65\x22\x4a\x70\x35\x7c\x68\x52\x97\x8b\x12\x5c\xc3\x30\x03\x02\x27\x11\x32\x81\x0f\xf9\x1a\x26\xc0\x08\x51\x20\xb8\x0c\xc3\x11\x90\xed\xe2\x4e\x97\x32\xdd\x58\xa0\x87\xa7\x0b\xd3\x1d\xf6\x64\xb9\x39\x83\x2c\x98\xe9\xc1\x80\x3d\x18\x4c\x57\x3a\xcc\xe4\xc2\xee\x5c\x57\x4f\xf0\x55\x83\xbc\x40\x1e\x2e\x8b\xe5\x06\x0b\xfc\x5f\xad\x85\xcb\x62\xf9\x90\x9c\x24\x55\x5c\x06\x43\xad\x56\xbb\xa8\x5d\x5d\x30\x3c\x8e\xc1\xf4\xf4\xf4\x64\xc0\x2c\x06\x8b\x45\xc7\x65\xb1\x74\x22\x15\x25\x25\x1a\x3a\x4a\x2c\x98\x52\x10\x20\x84\x14\x57\xa8\x48\x05\x86\x82\x86\xff\x92\x18\x2c\x99\xe4\x43\xd0\xd4\x11\x94\xaa\xd7\xb2\x28\xf1\x2a\x4d\x52\x4c\xc9\xd0\x48\x54\x0c\xa6\x0b\xcc\x98\x02\x65\xd2\xd7\x9c\x2a\x19\x4f\x9c\x5c\x5c\x26\x65\x20\x89\x88\x12\x41\x49\x82\xc1\x74\x61\xbe\x66\x55\x72\x8c\xc4\x08\x39\xf6\x6f\xa4\x5f\x4f\xff\x65\x01\x8d\x52\x25\x12\xbd\x79\x2f\x4a\xe5\x6b\x9a\x20\xfd\x52\xc8\x37\xd3\x44\x48\xaa\x0a\x61\x04\x23\x04\x96\x8c\x4b\x11\xbf\x14\x04\x25\x17\x18\xc2\x55\xdc\x65\x38\x22\x21\x31\x3c\x04\xc3\x12\xa7\x8c\x0a\x9c\xda\x13\xb8\x6c\x99\xc1\x18\x0e\xe8\x18\xae\x40\x65\x98\x9a\x58\xf4\xff\x62\x10\x81\x84\x44\xf8\x10\x0b\x66\x7a\xd2\x61\x37\x3a\x93\x15\xc2\x62\x72\xd9\x1e\x5c\x98\xed\x04\xb3\xb8\x30\xfc\x07\x2a\xc2\x64\x8a\xd8\xd4\x7f\x45\x59\x5c\x83\xcd\x9e\x7f\x41\x11\x52\x22\x93\x90\x92\xff\x08\xcb\xa4\xdc\x58\x0c\x57\x4a\x48\x3e\xa4\x50\x4a\xe2\x10\x86\x0a\x8d\x83\xc0\xd7\x99\xe4\x2e\xc3\x12\x31\x5c\x84\xc9\x10\x3e\xe4\x3a\x29\x2d\x12\x71\x85\x28\x41\x4a\x50\x29\x22\x14\xf0\x21\x8d\x52\xe5\xa2\x50\xc8\xb8\x2c\x19\x9b\xe3\xc1\x46\xa4\xf4\xd8\x58\x09\x93\xce\x71\x77\xf3\xa4\x4b\x10\x16\x93\x1e\xcb\x81\x61\x36\xc2\x81\x39\x6c\x76\xec\x54\xbc\x00\x93\x26\x1b\xcc\x9d\x8a\x97\xfd\x8f\xf1\x6b\x70\x45\x9c\x02\x95\x24\xfe\x63\x1d\xc3\x95\x9b\x54\x5a\xa1\x20\x48\x0c\x4f\x7d\x55\xd2\x6b\x91\xa4\x57\xbf\x12\x15\xe0\x64\x21\x70\x25\x52\x43\x81\xf3\x21\xe9\xa4\x4b\x32\xe8\xd5\xb0\xe2\x1f\x67\xe0\x8f\x78\xb5\x1c\x41\xdf\x68\xf7\x1f\x18\x81\xc5\x92\x6a\x09\x8e\xf8\xc6\x21\x28\xf9\xdf\x54\x14\xc3\x0b\xe4\x31\xfe\x3c\x0a\xe3\xef\xa7\x64\xfc\xed\xe6\x4e\x0d\x05\x0b\xfc\x27\xf1\xa9\x77\xc8\x0b\xfc\xf3\x25\x43\x50\x19\x1f\xc2\x21\x6f\xaf\xbb\x22\xad\x06\x00\xa8\xc3\x42\x81\x6f\x48\xc4\x96\x53\xbb\x45\x85\x76\xad\x6f\x6f\xfd\xea\xc3\xd0\x6e\x7e\xc9\x81\x9c\xfb\x67\x04\x2f\x28\xb9\xce\xfe\xb6\xaa\xa5\xc7\xb2\xf7\x39\x86\x65\xdb\x99\xd8\xd8\x76\x0e\xd2\x56\x5d\x3c\x67\x63\xe3\xbd\xd9\x32\xef\xc8\xb3\x19\xa7\xfd\x63\xea\x32\x35\xbe\xb2\x0e\xeb\x5d\x96\xd6\x4b\xdb\x85\x67\x73\x7c\x4c\x2e\xe4\x05\x1d\x61\xe6\x36\xcc\x2f\xdf\xfa\xde\xf7\x7c\x7e\x77\x6b\xe8\xa8\xdd\xac\x64\x6c\x38\xb9\xaa\x58\xb6\xb9\x70\xec\x7e\x4a\x78\x68\xcf\x50\xc9\x68\x5a\xd7\x5a\xff\x50\x4a\x60\xa8\x34\x9f\x52\xee\xc2\xe3\x32\xd1\x50\xe0\x36\x85\x23\x2c\xf2\x5a\x6c\x45\x73\x2c\x0e\xa3\xd5\x8c\x3d\xf8\xea\xee\xe0\xef\xab\x7e\xc0\x7a\xcc\xab\xd6\xa7\x0d\x84\x1f\xbc\xc5\x49\x5f\x17\x9a\x07\xf4\x8e\x2e\x8c\xcf\x57\x18\x6d\x98\xf1\x71\x7d\x0f\xfb\xcb\xe6\x0f\x93\xec\xe6\x79\x8d\x37\x52\x8d\x55\x83\x77\x72\xbc\x23\x12\xd8\x2d\x84\x13\x34\xe6\xb8\xdf\x79\xd5\xf1\xb6\x07\x7a\xbd\xfe\x26\xaf\x25\xa8\x95\x93\xd3\x7a\xbf\x42\xed\xda\x13\xcf\x56\x1b\x9d\x4f\x3a\xf2\x65\xd6\xe6\xae\xea\xe4\x3c\xc7\xdc\xda\xd9\x16\xd1\xf9\x75\xb3\x8d\xf5\x56\xa9\x5e\xcd\xd9\x0e\xd4\x90\x53\xc1\x3e\x7e\x0f\x36\xb6\xad\x4b\x79\xd4\x25\xdc\x98\xbe\xde\xcf\xa1\x0d\x7c\x9c\x53\x96\xdf\x56\xbb\x2e\x21\x34\x9b\x23\x6c\xba\x60\xfe\x4e\x59\xcd\x7b\x4b\xf4\x25\x17\xfc\xe6\x3a\x39\x35\x7d\xb3\x88\xf0\x31\x97\x9f\x5c\xe7\x96\x71\xa6\x5b\x7f\x72\xdd\x29\xeb\x8e\xae\xfd\x76\x85\x8b\x86\x8a\x98\xb0\xd1\xd6\xc8\xad\x51\xe2\x3b\xd7\x2f\x99\xd5\x3c\xfb\xcd\x78\xfa\x8f\x13\x3f\xe4\x9a\xb6\x5d\x1f\xdb\x24\xec\xdb\x9c\x5b\x17\x52\xf2\xd9\x3e\xeb\x16\x63\x73\x9f\x4f\x0f\x9c\xac\x8a\x3a\x4d\x69\x5e\x5f\x98\x52\x25\x22\x60\xb0\x77\x78\x9b\x31\xe0\x17\xdd\xfe\x10\x16\x2d\xca\x68\x00\xe6\x14\x2c\x6e\x03\xa6\xb5\x0b\x01\xe7\xd2\x4b\x0e\xa3\x05\xbe\x00\xdd\x0c\x8a\x3e\xf6\x5d\x26\xd0\x99\x81\x9d\xc8\xef\xf3\x71\x12\x49\x94\xba\x1b\x8e\x34\xe8\x71\x8b\x98\x7a\x9f\xb4\xca\x70\xfc\xb6\x62\x0b\x90\xc6\xb1\x7e\x67\x89\xd8\x79\x01\x88\xba\xb5\x37\xb1\x72\x7f\x47\xf4\x1f\xac\xc1\xa5\x49\x3b\x06\xf6\xba\x3e\xbd\xa1\xcd\xe3\x35\x82\x22\x27\xcb\xfc\x8d\x88\x76\x58\x12\xee\x97\x4c\x03\xc4\x46\xa9\x34\x40\xaf\x9b\xe5\x31\xda\x7f\xaf\xe1\xe3\x19\x27\x86\xae\xd8\xa3\x67\x9f\xda\x98\x2f\x2f\xb4\xa1\xd3\x07\xe6\x67\xa0\xbb\x5f\x2e\xcf\x27\xe2\xcf\xd5\xee\x6f\x16\x04\x5e\x3d\x28\xa7\x9e\xe3\xbb\xd3\x1e\x3f\xea\x69\xb9\xda\xb8\x3b\x15\x6f\x98\xfe\x73\x54\xd5\xb3\xbe\x41\x56\x44\xe3\xe3\xac\xb7\x7a\xc5\x3f\x5e\x1a\x76\xf0\x5d\x52\xac\xbd\x1d\xb8\xf7\xb8\x36\xa5\xde\x21\x3f\x10\xa4\x9e\x67\x96\xe6\xae\x7c\x3b\xb3\x6d\xf8\x61\x5a\xfa\x88\xf3\xe8\xd8\x47\x8f\xbb\x2b\xeb\x6b\xbc\x26\x66\xdb\x36\x24\x8a\xab\xf4\x77\x3b\x4e\xf0\xae\xf6\x4b\x1f\x77\x1b\xbf\xdf\xd7\x6c\x74\xeb\x5a\xd6\x40\x0d\xff\x17\x28\xd8\xf5\x53\x0d\x2d\x6d\x7a\xb6\x1c\xe1\x1d\xa8\xa9\xde\x5e\x1e\x23\x68\x7f\x34\x4a\xf9\x69\xf9\x82\xc1\xf4\xf9\xbd\x29\xf6\x2d\x3b\x02\x0e\x2e\xae\x3b\x75\x6a\x6e\x46\x31\xed\xf6\xa8\x1a\x38\x6b\x82\x94\x87\x0e\x05\x22\x89\xd1\xa6\x16\xb3\x66\x45\x68\x87\x44\x5f\x08\x33\x73\x9f\x34\x4a\x1b\xac\x12\x9e\x5f\x3d\xd1\x12\x6c\xe7\x7d\xb9\x55\x7d\xc3\x5e\xb4\xd6\xa1\x71\x45\xf9\xd8\x79\x37\xdb\x74\x04\xbf\xdf\x7c\xd4\x08\xf9\xb9\x0e\xd7\x45\xec\x7d\x39\xb8\x6a\xe2\x99\x7e\x9e\xac\x27\xad\x7e\xac\xaf\xb3\x28\x7d\x5c\x59\xc6\xb9\x7b\xfd\x42\xde\x8b\xf1\x6e\xf5\xf3\x9b\xcf\x87\x66\x36\x36\xfe\x54\x49\x3c\x0d\x28\x8a\x36\x76\x8c\xea\xeb\x04\xb6\x15\x9e\xf9\x16\x9a\x81\xf8\x64\xb6\x97\x07\x03\xba\x2a\x75\xc7\xc4\xc4\xb8\xf8\xa3\xe1\xd0\x2f\xa0\x17\xbf\xd5\xcf\xa8\x1c\xbb\xe4\xf4\x34\xa0\xf8\xd6\xa1\x6f\x16\x96\xa4\xf7\xb1\xcd\x12\x14\x7a\xe6\x86\x8a\xa3\xb8\x79\xbb\xd7\x85\xcc\xb7\x3e\xdd\xb8\xeb\x65\x82\x69\xd1\xfb\xdb\x8f\x9e\x75\xd4\x38\x8b\x2a\x37\xbe\xe0\x10\xb5\x3b\x6b\xbf\x67\xd4\x34\xdd\xf6\x79\xa9\xb7\x9c\x98\xe8\x3d\x28\x40\x72\x1c\xa6\x1d\xa9\xf8\x85\xaa\x8f\xd4\xcf\x9e\x6d\xbc\x65\xdf\xa6\x47\x16\x87\x88\x27\x14\x20\xa9\x91\x5a\x17\x74\xcd\xca\x7e\x70\xa0\x91\x75\x7d\xe3\xc8\x15\xc0\xff\xf0\xe1\xa6\xfe\xee\xbc\x91\xf1\x93\xde\x63\xdb\x52\xc5\x05\x55\xcd\xe7\xe7\xd0\x8d\x66\x9d\x33\x7b\xa2\x8f\x63\x81\x8b\x93\x4d\x1d\xe4\x73\x17\xc2\xe2\xa8\x0b\x46\x96\x3e\x47\xc5\x5f\x53\x04\x8a\x95\x33\x8b\xa8\xee\x2d\xc7\x23\xc3\xe6\xb9\x14\xdd\x5b\xf9\xf9\x1a\x7a\xc2\xe1\x95\xe3\x1b\xec\x9f\xe8\x13\xa2\x51\xd7\xfe\x43\x15\x0f\x1d\x1b\x1f\x9c\x7e\x98\x70\xa3\x81\x27\xb3\x2f\x99\x5d\x0e\xf0\xf2\x29\x9f\x3f\x38\x40\x13\x95\x8d\x6c\x5f\x9c\xc3\x2b\x9e\xf8\x6d\x60\xe1\x4c\xf7\x79\x33\x4a\x2d\x4a\x8a\xdb\x3f\x29\x35\xcb\xf4\xbf\x33\xc7\xaa\x10\x37\xcb\x88\x8b\x79\x64\x91\xfd\xc1\x86\x9f\x56\xb7\xa7\x1d\x50\x3f\xb9\x16\x7e\x58\xd7\x72\xc0\x04\x8c\x0f\x98\xbb\xe3\xd7\x48\x1b\xed\x9c\x12\xed\x4d\xfe\x1e\xfe\xea\x95\x81\x94\xb6\xcb\xab\xcf\x09\x77\xc2\xe8\x23\x56\x01\x6d\xc7\x12\xf4\xa0\x47\x09\xda\x69\xf5\x9e\x6e\xe7\x3d\xd1\xbe\xa0\x42\xb2\xda\x68\xe9\xd6\x04\xe0\x99\x49\x10\x22\xde\x95\x9f\xa1\x2b\x2b\x55\x5d\x74\x37\x3f\x5f\xef\xc0\xa3\xce\x2b\x9e\xee\x09\x87\xef\xf2\x7d\xbb\xc9\xee\xa2\xf8\x85\xee\xf7\x43\x5b\xa8\x13\x49\x77\x4c\x23\xbf\xcf\xe3\xab\x4a\xab\x31\xb1\xfc\xb3\xf1\x1e\x97\xa6\x6b\xa7\x72\xb7\xc7\x97\x16\xdc\xde\xa3\xbb\x57\x22\xed\x77\x6d\x29\x6d\xfb\xe1\xb6\x26\xcc\x86\xbb\xa0\xfe\x66\x60\x7a\x35\x36\x9f\x71\x76\xb4\x84\xe8\x78\xf6\xdc\xc4\x76\x8f\xe9\x07\xb7\xae\xe4\x5c\x4c\x5f\xc9\x8e\x91\x53\x03\xb3\x75\x3a\x3a\xf5\x56\xfc\x15\x77\x5b\xc0\x12\x0e\x8a\x5c\x71\xa2\x63\x69\xa8\x34\x88\x9d\x13\xff\xb9\xb9\x3e\xba\xdc\x1f\xb7\x0d\xed\x39\xdc\x52\x4f\x71\x6c\x5d\x6d\xef\x98\x0b\x96\x95\x9f\xeb\xea\xb2\xfb\xf6\xca\xc3\x61\x3d\x12\xf9\xa3\xdd\xc2\xb0\xcf\xa2\xbc\xeb\x12\x47\xbc\x23\xab\x48\xc5\x40\x1e\xea\xf1\x51\xd7\xac\xd3\x78\xd7\x19\xb1\xc7\xe5\x4d\xa3\xdb\x9f\xf8\x4c\xd3\xec\x18\xef\x20\xcb\x01\x3f\xc1\x42\x54\x50\xb0\xbe\x62\xb4\xa3\xf7\x97\x4d\x13\x9d\x75\x59\x35\x94\x4f\x1c\x58\xc7\x74\xcd\xd1\xe9\x9d\x63\x95\x6b\x2e\xbf\x9c\x18\xd2\xd9\x1f\x9f\x63\x6d\x1d\x52\xb6\x95\x66\xb2\x87\xe0\x46\xe9\xbe\x5c\x5b\xb3\x6f\xee\x41\x23\xc1\xbb\xa7\x69\xc6\xd5\xf2\x93\xdb\x2d\xf2\x73\x2c\x4a\x2f\xb6\xd7\xee\xf5\xfe\xfa\xad\x5d\x67\x82\x77\x55\x55\x6c\x1b\x97\x1e\x6b\xc8\xc2\x7f\xed\x3d\xd9\x94\xc6\xa9\xad\x6c\x35\x09\x6b\xe6\x2d\xc8\x4a\xc2\x1a\x3c\xb0\x1b\x32\xa5\xb2\xc0\x41\x58\xdd\xbf\xfb\x6a\x47\x99\x7c\x66\xdd\x9a\x4d\x23\xbc\x24\xbb\xa1\x77\xbf\xfb\xc6\x89\xa5\x44\xa6\xc5\x1b\xbe\x72\x85\x7e\x01\x82\xa3\x4b\xa3\x33\xff\x2f\x00\x00\xff\xff\x19\xfc\x59\x03\x42\x0b\x00\x00"))
)
