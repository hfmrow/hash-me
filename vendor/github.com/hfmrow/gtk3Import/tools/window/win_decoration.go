// win-decoration.go

/*
	This software use gotk3 that is licensed under the ISC License:
	https://github.com/gotk3/gotk3/blob/master/LICENSE

	Copyright Â©2020 H.F.M - window package github.com/hfmrow
	This program comes with absolutely no warranty. See the The MIT
	License (MIT) for details:
	https://opensource.org/licenses/mit-license.php
*/

/*
   #status_bar_box GtkLabel:insensitive {
        color: rgba(255,255,255,0);
        transition: 500ms ease-in-out;
   }

   #status_bar_box GtkButton:insensitive {
       background: rgba(255,255,255,0);
       transition: 500ms ease-in-out;
   }
*/

package window

import (
	"time"

	"github.com/gotk3/gotk3/gdk"
	"github.com/gotk3/gotk3/glib"
	"github.com/gotk3/gotk3/gtk"

	gipf "github.com/hfmrow/gtk3Import/pixbuff"
)

// options: DECO_AUTO_SHOW_HIDE
type DecoOpt int

const (
	DECO_AUTO_SHOW_HIDE   DecoOpt = 1 << 1
	DECO_INIT_TRANSPARENT DecoOpt = 1 << 2
)

// WinDecorationStructure: structure to hold methods and
// bahaviors for the window decoration.
type WinDecorationStructure struct {
	eventResize,
	eventMinimize,
	eventRoot *gtk.EventBox

	window   *gtk.Window
	styleCtx *gtk.StyleContext

	signalHandleMove glib.SignalHandle
	signalHandleMoveIsBlocked,
	isTitleDisplayed,
	backSkipTaskbarHint,
	transparentInitialized bool

	imgMinimize,
	imgResize,
	imgRoot *gtk.Image

	DefaultCssName, // Can be used inside additional CSS builds definition.

	AdditionalCss,
	class string

	TransparentFG,
	TransparentBG *gdk.RGBA

	Options DecoOpt

	CallbackALTPressed func(isTitleDisplayed bool)
}

// WinDecorationStructureNew: create a new structure to hold
// decorations methods and manage behaviors.
func WinDecorationStructureNew(
	window *gtk.Window,
	eventResize,
	eventMinimize,
	eventRoot *gtk.EventBox, options ...DecoOpt) (wds *WinDecorationStructure, err error) {

	wds = new(WinDecorationStructure)

	wds.window = window
	wds.eventResize = eventResize
	wds.eventMinimize = eventMinimize
	wds.eventRoot = eventRoot
	wds.CallbackALTPressed = nil

	wds.TransparentFG = gdk.NewRGBA(1, 1, 1, 1)
	wds.TransparentBG = gdk.NewRGBA(0, 0, 0, 1)
	wds.class = "transparent_class"

	// Setting EventBox property
	wds.eventBoxProps(wds.eventResize, gtk.ALIGN_START, gtk.ALIGN_END, false, true)
	wds.eventBoxProps(wds.eventMinimize, gtk.ALIGN_END, gtk.ALIGN_START, false, false)
	wds.eventBoxProps(wds.eventRoot, gtk.ALIGN_START, gtk.ALIGN_START, false, false)

	wds.DefaultCssName = "mainWindowName"

	if tmpName, err := wds.window.GetName(); err == nil {
		if len(tmpName) > 0 {
			wds.DefaultCssName = tmpName
		}
	} else {
		return nil, err
	}

	if len(options) > 0 {
		wds.Options = options[0]
	}

	if err != nil {
		return nil, err
	}
	return wds, nil
}

func (wds *WinDecorationStructure) Init() (err error) {

	if wds.Options&DECO_INIT_TRANSPARENT != 0 {
		wds.TransparentBackground(wds.TransparentFG, wds.TransparentBG)
	}

	if wds.imgRoot, err = wds.makeImg(rootTermIco, 24, wds.eventRoot); err == nil {
		if wds.imgResize, err = wds.makeImg(resizeIco, 18, wds.eventResize); err == nil {
			if wds.imgMinimize, err = wds.makeImg(minimizeIco, 12, wds.eventMinimize); err == nil {

				if wds.Options&DECO_AUTO_SHOW_HIDE != 0 {
					wds.DiscreteShowWindow()
				} else {
					wds.window.Show()
				}
				if err = wds.winResizer(); err == nil {

					if wds.Options&DECO_AUTO_SHOW_HIDE != 0 {
						wds.DiscreteHideWindow()
					} else {
						wds.window.Hide()
					}
					wds.winMove()
					wds.winMinimize()
					wds.window.SetDecorated(false)
				}
			}
		}
	}
	return
}

// DiscreteShowWindow:
func (wds *WinDecorationStructure) DiscreteShowWindow() {
	wds.backSkipTaskbarHint = wds.window.GetSkipTaskbarHint()
	wds.window.SetSkipTaskbarHint(true)
	wds.window.Iconify()
	wds.window.Show()
}

// DiscreteHideWindow:
func (wds *WinDecorationStructure) DiscreteHideWindow() {
	wds.window.Hide()
	wds.window.Deiconify()
	wds.window.SetSkipTaskbarHint(wds.backSkipTaskbarHint)
}

// TransparentBackgroundReset:
func (wds *WinDecorationStructure) TransparentBackgroundReset() {
	wds.styleCtx.RemoveClass(wds.class)
}

// TransparentBackground: Make background window transparent using
// r, g, b -> colors 0-255 and, a -> alpha as float 0.0 - 1.0
// Note: Window's CSS name is changed to match the embeded one.
// Note1: The targeted window must not been shown before 1st call.
func (wds *WinDecorationStructure) TransparentBackground(foreground, background *gdk.RGBA) (err error) {

	var (
		screen *gdk.Screen
		visual *gdk.Visual
	)

	css := `#` + wds.DefaultCssName + "." + wds.class + ` {
	background-color: ` + background.String() + `;
	color: ` + foreground.String() + `;
	}
	`
	// adding a class permit to reset the CSS
	if wds.styleCtx, err = wds.window.GetStyleContext(); err == nil {
		wds.styleCtx.AddClass(wds.class)

		if err = wds.CssApply(css); err == nil {
			if err = wds.CssApply(wds.AdditionalCss); err == nil {

				if !wds.transparentInitialized {
					wds.window.SetName(wds.DefaultCssName)
					screen = wds.window.GetScreen()
					if visual, err = screen.GetRGBAVisual(); err == nil {
						wds.window.SetVisual(visual)
						wds.window.Show()
						wds.transparentInitialized = true
					}
				}
			}
		}
	}
	return
}

// CssApply:
func (wds *WinDecorationStructure) CssApply(cssIn string) (err error) {

	if len(cssIn) > 0 {
		var (
			cssProv *gtk.CssProvider
			screen  *gdk.Screen
		)

		if cssProv, err = gtk.CssProviderNew(); err == nil {
			if err = cssProv.LoadFromData(cssIn); err == nil {
				if screen, err = gdk.ScreenGetDefault(); err == nil {
					gtk.AddProviderForScreen(screen, cssProv, gtk.STYLE_PROVIDER_PRIORITY_APPLICATION)
				}
			}
		}
	}
	return
}

// WidgetFader: Provide fadeIn or fadeOut in seconds using
// the given widget. NOTE: the timer is not really accurate,
// using 10sec timer, the real time passed is 10sec +- 580ms.
// Not really a problem for simple splash screen or similar.
func (wds *WinDecorationStructure) WidgetFader(
	iWidget gtk.IWidget,
	seconds float64,
	callbackDone func(),
	fadeOut ...bool) {

	var (
		fadeIn  = !(len(fadeOut) > 0 && fadeOut[0])
		t       = 100000 * seconds
		inc     = 100 / t
		ticker  = time.NewTicker(time.Duration(t))
		opacity float64
		done    = make(chan bool)

		fade = func(opac float64) {
			if opacity >= 0 && opacity <= 1 {

				glib.IdleAdd(func() {
					iWidget.ToWidget().SetOpacity(opac)
				})
			}
		}
	)
	go func() {
		for opacity <= 1 {
			opacity += inc
			select {
			case <-done:
				if fadeIn {
					fade(1)
				} else {
					fade(0)
					iWidget.ToWidget().SetVisible(false)
				}
				return
			case <-ticker.C:
				if fadeIn {
					fade(opacity)
				} else {
					fade(1 - opacity)
				}
			}
		}
		ticker.Stop()
		if callbackDone != nil {
			callbackDone()
		}
		done <- true
	}()
}

// SplashWin: display a splash window with image inside it.
func (wds *WinDecorationStructure) SplashWin(image *gtk.Image, text string) (err error) {

	var (
		splash      *gtk.Window
		box         *gtk.Box
		scrolledWin *gtk.ScrolledWindow
		hAdj, vAdj  *gtk.Adjustment
		textView    *gtk.TextView
		buffer      *gtk.TextBuffer
	)

	if splash, err = gtk.WindowNew(gtk.WINDOW_POPUP); err == nil {

		// Avoiding black display instead of transparent (on rounded corners)
		screen := splash.GetScreen()
		visual, _ := screen.GetRGBAVisual()
		splash.SetVisual(visual)
		splash.SetDecorated(false)

		splash.SetPosition(gtk.WIN_POS_CENTER)
		splash.Resize(480, 240)

		if box, err = gtk.BoxNew(gtk.ORIENTATION_VERTICAL, 0); err == nil {
			if hAdj, err = gtk.AdjustmentNew(0, 0, 0, 0, 0, 0); err == nil {
				if vAdj, err = gtk.AdjustmentNew(0, 0, 0, 0, 0, 0); err == nil {
					if scrolledWin, err = gtk.ScrolledWindowNew(hAdj, vAdj); err == nil {
						if textView, err = gtk.TextViewNew(); err == nil {
							if buffer, err = textView.GetBuffer(); err == nil {

								buffer.SetText(text)
								box.PackStart(image, true, true, 0)
								scrolledWin.Add(textView)
								box.PackStart(scrolledWin, true, true, 0)
								splash.Add(box)
								splash.ShowAll()

								wds.WidgetFader(splash, 2, func() {

									splash.Connect("button-press-event",
										func(eventBox *gtk.EventBox, event *gdk.Event) bool {
											// eventButton := gdk.EventButtonNewFromEvent(event)
											// x, y := eventButton.MotionValRoot()
											// wds.window.BeginMoveDrag(
											// 	eventButton.Button(),
											// 	int(x), int(y),
											// 	eventButton.Time())

											wds.WidgetFader(splash, 1, func() {
												splash.SetVisible(false)
											}, true)
											return false
										})
								})
							}
						}
					}
				}
			}
		}
	}

	return
}

// SignalHandleBlockUnblock: Block / unblock the MOVING window
// signal for a given Widget. NOTE: Does not work well on TextView,
// the use of his ScrolledWindow container is required.
func (wds *WinDecorationStructure) SignalHandleBlockUnblock(
	ifaceWdgt gtk.IWidget,
	callbackEnter,
	callbackLeave func()) {

	ifaceWdgt.ToWidget().Connect("enter-notify-event",

		func(iWdgt gtk.IWidget) {
			wds.window.HandlerBlock(wds.signalHandleMove)
			wds.signalHandleMoveIsBlocked = true
			if callbackEnter != nil {
				callbackEnter()
			}
		})

	ifaceWdgt.ToWidget().Connect("leave-notify-event",

		func(iWdgt gtk.IWidget) {
			if wds.signalHandleMoveIsBlocked {
				wds.signalHandleMoveIsBlocked = false
				wds.window.HandlerUnblock(wds.signalHandleMove)
			}
			if callbackLeave != nil {
				callbackLeave()
			}
		})
}

// WinMinimize: define minimize behavior
func (wds *WinDecorationStructure) winMinimize() {

	if wds.eventMinimize != nil {
		// Set signals
		wds.eventMinimize.Connect("button-release-event", func(
			eb *gtk.EventBox,
			event *gdk.Event) bool {

			clickEvent := gdk.EventButtonNewFromEvent(event)
			if clickEvent.Button() == gdk.BUTTON_PRIMARY {
				wds.window.Iconify()
				return true
			}
			return false
		})

		wds.SignalHandleBlockUnblock(
			wds.eventMinimize,
			func() { gipf.SetPict(wds.imgMinimize, minimizeIco, 14) },
			func() { gipf.SetPict(wds.imgMinimize, minimizeIco, 12) })
	}
}

// WinMove: Handling moving window functionality
func (wds *WinDecorationStructure) winMove() {

	// Handling button pressed for moving window
	wds.signalHandleMove = wds.window.Connect("button-press-event",

		func(eventBox *gtk.EventBox, event *gdk.Event) bool {
			eventButton := gdk.EventButtonNewFromEvent(event)

			if eventButton.Button() == gdk.BUTTON_PRIMARY {

				x, y := eventButton.MotionValRoot()
				wds.window.BeginMoveDrag(
					eventButton.Button(),
					int(x), int(y),
					eventButton.Time())

				return true
			}
			return false
		})

	// Handling key (alt) pressed for display title window
	wds.window.Connect("key-press-event",

		func(window *gtk.Window, event *gdk.Event) bool {
			eventKey := gdk.EventKeyNewFromEvent(event)
			if eventKey.KeyVal() == gdk.KEY_Alt_L {

				if wds.CallbackALTPressed != nil {
					wds.CallbackALTPressed(!wds.isTitleDisplayed)
				}

				if !wds.isTitleDisplayed {
					wds.window.SetDecorated(true)
					wds.isTitleDisplayed = true
				} else {
					wds.window.SetDecorated(false)
					wds.isTitleDisplayed = false
				}
				return true
			}
			return false
		})

	// Handling button release for hiding title window
	wds.window.Connect("button-release-event",

		func(window *gtk.Window, event *gdk.Event) bool {
			eventButton := gdk.EventButtonNewFromEvent(event)
			if eventButton.Type() == gdk.EVENT_BUTTON_RELEASE {
				wds.window.SetDecorated(false)
				return true
			}
			return false
		})

	return
}

// WinResizer: Display resize cursor on hovering over resize image
func (wds *WinDecorationStructure) winResizer() (err error) {

	if wds.eventResize != nil {

		var (
			gWindow  *gdk.Window
			gDisplay *gdk.Display
			gCursor  *gdk.Cursor
		)
		// Resizing window signal
		wds.eventResize.Connect("button-press-event",

			func(eventBox *gtk.EventBox, event *gdk.Event) bool {
				eventButton := gdk.EventButtonNewFromEvent(event)
				x, y := eventButton.MotionValRoot()

				wds.window.BeginResizeDrag(
					gdk.WINDOW_EDGE_SOUTH_WEST,
					eventButton.Button(),
					int(x), int(y),
					eventButton.Time())

				return true
			})

		if gWindow, err = wds.imgResize.GetWindow(); err == nil {
			if gDisplay, err = gdk.DisplayGetDefault(); err == nil {
				if gCursor, err = gdk.CursorNewFromName(gDisplay, "sw-resize"); err == nil {

					gWindow.SetCursor(gCursor)
				}
			}
		}
	}

	return
}

// WinDispRootImg: Display icon ROOT if needed
func (wds *WinDecorationStructure) WinDispRootImg(isRoot bool) {

	if isRoot {
		wds.imgRoot.SetVisible(true)
	} else {
		wds.imgRoot.SetVisible(false)
	}
}

// eventBoxProps: define EventBox property
func (wds *WinDecorationStructure) eventBoxProps(
	eBox *gtk.EventBox,
	halign, valign gtk.Align,
	hexpand, vexpand bool) {

	// Set EventBox property
	if eBox != nil {
		eBox.SetProperty("halign", halign)
		eBox.SetProperty("valign", valign)
		eBox.SetProperty("hexpand", hexpand)
		eBox.SetProperty("vexpand", vexpand)
	}
}

// makeImg: Image initialisation
func (wds *WinDecorationStructure) makeImg(
	imgData interface{},
	size int,
	eBox *gtk.EventBox) (img *gtk.Image, err error) {

	if img, err = gtk.ImageNew(); err == nil {
		if err = gipf.SetPict(img, imgData, size); err == nil {

			img.SetVisible(true)
			if eBox != nil {

				eBox.Add(img)
			}
		}
	}
	return
}

// Images data
var (
	minimizeIco = gipf.HexToBytes("minimizeico", []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x00\x20\x03\xdf\xfc\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x12\x00\x00\x0b\x12\x01\xd2\xdd\x7e\xfc\x00\x00\x02\xd2\x49\x44\x41\x54\x58\x85\xc5\xd7\x3b\x6f\x13\x41\x10\x07\xf0\x9f\x0f\x13\xde\xaf\x88\x12\x09\x82\x00\x51\x45\x14\x01\x29\x12\x88\x82\x9a\x06\x1a\x1a\xa0\xe4\x33\x50\xf1\x31\xa8\x09\x12\x1d\x0f\x89\x02\x0a\x8a\x20\x0a\x88\xa0\xa0\x26\xa0\xa4\xa1\xe1\x91\x10\x89\xa7\x70\x62\x8a\x9d\xc5\x17\x73\x76\xce\x21\x81\x91\x4e\xf6\xed\xce\xfc\xff\x3b\xb3\x73\xb3\xb3\x0d\xfd\xa5\x81\x02\x4b\x68\xc7\xd8\x26\x1c\xc1\x08\x76\xc7\xd8\x27\xcc\xe0\x15\x7e\xf4\xb1\x1d\x48\x32\x00\x0c\xe1\x1c\xee\xe0\x5d\x90\x7c\xc5\x42\x3c\x5f\x63\xec\x5d\xe8\x9c\x0b\x1b\x81\xd1\x18\x94\x7c\x43\x18\x35\x70\x19\x6f\xc3\x8b\x67\xb8\x8a\x33\x38\x88\xbd\xf1\x1c\x8c\xb1\xab\xa1\xd3\x0e\x9b\xcb\x25\x9c\x0d\x75\xc9\x9b\xf1\xbb\x0f\x93\x01\x76\x13\x47\x63\xbc\x9f\x37\x79\xee\x68\xd8\xb4\x03\x63\x5f\x17\x76\x4f\xc9\xab\x3c\x8e\x8f\xd2\xbe\x9e\x28\x81\x37\x02\xa4\x1c\xa1\xb2\x87\xcd\xd2\xbb\xb0\x9d\x09\xac\xb1\x2e\x8e\xbe\xe4\xdf\xf1\x00\xdb\x4a\x2b\x2f\xaa\x8c\x7a\x48\xa1\xe3\xed\x76\x3c\x0c\xcc\x9e\x8b\xc8\xe0\xfb\xf1\x3e\x0c\x72\xf2\xd4\xde\xbb\x0a\xc9\x91\x2a\x02\xf3\x7d\x70\x94\x39\xd1\x09\xd9\x24\x5e\x63\x47\x95\xd2\x2a\x25\x63\xec\xc0\x74\x70\x94\x39\x7f\x7b\x78\x49\x4a\x9a\xf1\xae\xf1\xb5\x90\x8c\x35\x1e\x1c\x97\xba\x39\x9a\x52\xb2\x4c\xac\x03\x79\xf7\x22\x26\x82\x6b\xd9\x17\x71\x3e\x56\x36\x1a\xef\x6b\x11\xfa\x6e\xc9\x98\xa3\xc1\x75\xbe\x3c\x79\x1b\x53\xf1\x7f\xe0\xaa\x35\x80\x64\xec\xa9\xe0\x54\x60\x33\x4e\xe2\x6e\x4c\xae\x47\xf8\xb3\x64\xec\x7b\xc1\xb9\xb9\xc0\x61\xec\xc2\x8b\x98\x5c\x5a\xc7\x05\x64\xec\xe7\xc1\x79\xa8\xc0\x81\x98\x98\x89\xc9\x55\x9d\x5c\x35\x25\x63\xcf\x04\xe7\x48\x13\xc3\xf8\x29\x9d\x6a\x55\xf2\x37\x39\xd1\xcb\x99\x85\xe0\x1c\x5e\xf1\x70\xe8\x03\xf2\xb7\xd2\x46\xbb\x89\x39\x6c\x94\xf6\xe4\x43\x85\xe2\x46\x29\x0a\x83\xe6\x46\x11\x24\x3f\x2b\xe6\x76\x49\xfd\xc2\x7c\x13\xb3\xa1\x3c\x82\x37\x3a\x21\x6f\x63\x0b\xee\xe3\x18\x16\xd5\xdf\x8e\xb6\x94\xf1\x2f\x71\x16\xdf\x74\x4e\xc9\x76\x70\x15\x98\x6d\x4a\xf5\x79\x41\x3a\xa9\x1e\xc5\xc4\x62\x00\x6d\x95\xca\xe7\x7d\x3c\x96\x4e\xc7\x95\x22\x51\xe0\x0b\x4e\x07\xf9\xb6\x58\x40\x9e\x5b\x92\x4e\xdc\x85\xe0\xc6\x9f\x85\x28\x7b\xba\x47\xea\xf7\x2e\xc4\x7b\x9d\x1a\x91\x75\x2e\x84\xed\x9e\x0a\xdc\x65\x85\x08\x6e\x49\xcd\x43\x2e\x93\xe5\x52\xdc\x90\x8a\x95\xf8\xad\xf3\x64\xdd\xf2\x96\xe5\x9c\x18\x0d\xae\x5b\x4a\x0a\x79\x2b\x9e\x48\x27\x55\x13\x2d\xe9\x13\x9d\x96\x9a\x8a\xb9\x9a\x11\x20\x6d\xe1\x30\x3e\x4b\x85\x6e\xae\x84\x39\x81\x53\x31\xde\xca\xed\x55\x0b\xd7\x70\x03\xd7\xf1\x34\xc6\xe7\x71\x45\x2a\x56\x2d\x83\x25\x61\x4e\xf0\xf9\x12\xc7\x38\x2e\x4a\xcd\x6a\xab\xec\x50\xb9\x21\x99\xb6\x3e\x0d\xc9\x4e\xa9\xd9\x99\xec\xe2\x5c\xa6\x54\xd5\x92\x0d\x85\x37\xab\x79\x86\xd4\x6c\xc9\xe8\x84\x63\x4c\x6a\x20\x1f\xfa\x87\x4d\x69\xd5\x22\xd6\xaa\x2d\x9f\x55\xb3\x2d\xcf\xf2\x5f\x2f\x26\x59\x7a\x5d\xcd\xa6\xac\x7c\x35\x9b\xd2\xb9\x9a\xe5\xe6\x73\x55\xed\xfd\x3f\xb9\x9c\xae\xf4\x5d\xd7\xb9\x9e\x37\xa4\x6f\xbd\xd7\xf5\x7c\x51\x1f\xf9\x05\xd0\x9d\xb8\xef\x82\x66\xdd\xd8\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x57\x38\xc1\x45\x20\x03\x00\x00"))
	resizeIco   = gipf.HexToBytes("resizeico", []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x00\x30\x0a\xcf\xf5\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x12\x00\x00\x0b\x12\x01\xd2\xdd\x7e\xfc\x00\x00\x09\xd0\x49\x44\x41\x54\x58\xc3\xad\x57\x5d\x6c\x14\xd7\x15\x3e\xf7\xde\xf9\xdb\x1d\x7b\x6d\xd6\xbe\x56\x6d\xc6\xc6\x5e\xb0\xd7\x84\x96\xa2\x18\x43\x8d\x8c\x43\x54\x27\x0a\x76\xd4\x26\x01\x94\x9f\xa2\x4a\x34\x0f\x95\x2a\xf5\xa9\x0f\x7d\xaa\xaa\x4a\x55\xa5\x28\x2a\x52\xd5\x37\x92\xfe\x00\x06\xb7\x05\x05\x67\x15\x1c\x4c\x31\xc4\xa1\x8b\x31\x88\x86\x35\x6b\xc3\xe2\xac\x91\x9d\x6d\x59\x32\x31\xb6\x67\xed\x35\xf3\x73\xef\xed\x03\x33\xce\x86\x36\x6d\xd2\xf6\xbe\xcc\xde\xd9\x3b\x33\xdf\xfd\xce\x77\xbe\x73\x2e\x3a\x7a\xf4\xe8\x6d\x84\x90\x0e\x00\x0f\x38\xe7\xf3\x9c\xf3\x4f\x6c\xdb\xce\xce\xcc\xcc\xdc\x74\x5d\x37\x3d\x35\x35\x75\x3d\x99\x4c\x2e\x00\x00\x98\xa6\x09\x00\x80\x0d\xc3\x40\xb9\x5c\x8e\xc1\xff\x61\xa0\x63\xc7\x8e\x89\xd5\x09\x42\xab\x57\x8c\x31\x00\x80\xe7\xba\xee\xc7\x85\x42\x61\x2c\x97\xcb\x9d\xcd\x64\x32\x83\x27\x4f\x9e\x9c\xa5\x94\x22\xd3\x34\xc1\x30\x0c\xfc\xbf\x02\x41\xc7\x8e\x1d\xe3\x8f\xdc\x13\x00\x20\x84\x10\x08\x00\x30\xc6\x18\x10\x42\x20\x49\x12\xb8\xae\x5b\x5c\x5e\x5e\x1e\xba\x79\xf3\xe6\x1b\x43\x43\x43\x67\x27\x26\x26\x18\x00\x60\x4a\x29\x98\xa6\xc9\xff\x2b\x00\x7d\x7d\x7d\x6e\xe9\x1c\x3d\xa4\x01\x7d\x06\x91\x10\xdc\xff\x93\x60\x8c\x05\x21\x04\x2d\x2d\x2d\x5d\x99\x98\x98\xf8\xc5\x99\x33\x67\x12\x13\x13\x13\x82\x52\x4a\x7c\x10\xe2\x4b\x01\xe8\xef\xef\xff\xa7\x07\x84\x10\xc0\x39\x07\x00\x60\x00\x20\x10\x42\xc4\x07\x25\x7c\x30\x88\x10\x82\x09\x21\x60\x59\xd6\x9f\x53\xa9\xd4\x8f\x4e\x9d\x3a\x75\x23\x97\xcb\x11\x4a\xa9\xf8\x32\x6c\x90\xee\xee\xee\x0a\xdb\xb6\xaf\xd9\xb6\xfd\x57\xc6\x58\x96\x73\x3e\x2f\x84\xc0\xaa\xaa\xea\xb2\x2c\x4b\x08\x21\x2c\x84\x40\xfe\x87\x05\x42\x88\x20\x84\x10\xe7\x9c\x33\xc6\xb8\xaa\xaa\x1b\x9a\x9a\x9a\x0e\x34\x37\x37\x43\x2a\x95\x7a\xdf\x34\x4d\x41\x29\xc5\xc5\x62\xf1\x0b\x31\x81\x0c\xc3\x58\x9d\x28\x8a\x02\xb2\x2c\x23\x5d\xd7\xf5\x8e\x8e\x8e\xf5\xe5\xe5\xe5\xed\x0d\x0d\x0d\x4f\x54\x54\x54\x7c\x53\x96\xe5\x5a\xc6\x18\x30\xc6\x82\x70\x60\x9f\x2d\x06\x00\x20\xcb\x32\x29\x14\x0a\xe7\x86\x86\x86\x0e\x9c\x38\x71\x22\x67\x18\x86\x94\xcb\xe5\xbc\xff\x08\x00\x00\xa4\x12\xf1\x05\xb4\x03\x00\x80\xaf\x76\xb1\x77\xef\xde\x68\x4b\x4b\xcb\xb3\xb1\x58\xec\xd5\x48\x24\xb2\x93\x31\x86\x18\x63\xcc\x07\x11\x84\x86\x49\x92\x24\x31\xc6\x66\x4f\x9f\x3e\xfd\xad\xe3\xc7\x8f\xa7\xbe\x08\x88\xd5\xd8\xfa\x57\x64\x18\x06\x8e\x44\x22\x28\x12\x89\x60\x49\x92\xb0\x65\x59\x68\x72\x72\xb2\x78\xf1\xe2\xc5\x54\x36\x9b\x3d\xac\x28\x4a\x72\xcd\x9a\x35\x4d\xe1\x70\xb8\x91\x73\xfe\x30\x5d\x10\xc2\x08\x21\xcc\x39\x67\x84\x90\x35\x2d\x2d\x2d\x7b\x54\x55\x7d\x3f\x99\x4c\x7e\x64\x18\x86\x64\x59\xd6\xe7\x6a\x02\xc5\x62\xb1\xd5\x49\xa1\x50\x08\xcc\x66\x15\xa0\x61\x18\x08\x00\x38\x00\xe0\x5c\x2e\xc7\x01\x80\xc7\x62\x31\x72\xe0\xc0\x81\xef\x6d\xd8\xb0\xe1\xe7\x00\x50\xe3\xb3\x41\x82\x8c\x21\x84\x60\xce\xf9\xdc\xbb\xef\xbe\xdb\xd3\xd7\xd7\x77\xc5\x30\x0c\xf2\x79\x7e\x81\x0e\x1d\x3a\xf4\x06\xc6\x58\x17\x42\x2c\x3b\x8e\x73\x7f\x66\x66\x66\xda\x71\x9c\x89\xe9\xe9\xe9\xf1\x44\x22\x61\x95\x84\x83\xa8\xaa\xca\x6d\xdb\xc6\xbe\x2b\xb2\x7d\xfb\xf6\xd5\xf7\xf6\xf6\xbe\x19\x0e\x87\x9f\x76\x1c\xa7\x14\x04\xc3\x18\x13\x00\xf8\xf8\x9d\x77\xde\x79\xea\xf8\xf1\xe3\xe3\x7e\x9a\xb2\x7f\x9b\x86\x25\x0e\x28\x1c\xc7\xf9\x7b\xa1\x50\x18\x99\x99\x99\x79\x6b\x72\x72\x72\x30\x91\x48\xac\x50\x4a\xb1\xbf\x94\x03\x80\x64\x9a\xa6\xd7\xdd\xdd\x2d\xf7\xf6\xf6\xfe\x72\xed\xda\xb5\x3f\xf4\x41\x60\x00\x40\x42\x08\x46\x08\x21\x9c\xf3\xec\xc0\xc0\xc0\x93\x27\x4e\x9c\xf8\x88\x52\x8a\x1f\x4d\x51\xf2\xfc\xf3\xcf\xff\x44\x3c\x1c\xdc\x4f\x2d\xf1\x90\x51\x14\x09\x85\x42\x5f\x5d\xbb\x76\xed\x8b\xad\xad\xad\x7b\xb7\x6e\xdd\xea\xb9\xae\x3b\x31\x3e\x3e\xee\xe8\xba\x4e\x4c\xd3\xe4\x94\x52\x9c\x4e\xa7\x61\x68\x68\x68\xb0\xad\xad\xcd\xad\xae\xae\xee\x66\x8c\xf1\x12\x4d\x78\x92\x24\x55\x37\x34\x34\xb4\x64\x32\x99\xe3\xb3\xb3\xb3\xe8\x51\xa3\x22\x7b\xf6\xec\xf9\x29\xfa\x74\xe0\xe0\x07\x00\x88\x87\x78\x18\x20\x84\xaa\x29\xa5\xcf\xb6\xb6\xb6\xf6\xd4\xd7\xd7\x67\xa6\xa6\xa6\xee\x58\x96\x45\x8a\xc5\xa2\xa0\x94\x0a\x5d\xd7\xa5\x44\x22\x31\xd2\xd6\xd6\xe6\xf9\x20\x58\xa9\x30\x43\xa1\x50\xbc\xa1\xa1\x61\x65\x78\x78\xf8\x2f\xbe\xf0\x57\x41\x90\x7d\xfb\xf6\xfd\xac\xe4\xa3\xc8\xaf\x01\x0c\x21\x24\x10\x42\x52\x00\x86\x31\xc6\x09\x21\x75\xb1\x58\xec\xbb\x2d\x2d\x2d\xca\xad\x5b\xb7\x2e\x58\x96\x05\xba\xae\x83\xcf\x06\x49\x24\x12\x23\x3b\x76\xec\xa8\xa9\xac\xac\xdc\x5e\x02\x02\x71\xce\x51\x34\x1a\xfd\x86\xaa\xaa\x89\x1b\x37\x6e\xdc\x2b\x35\x2a\xd2\xd3\xd3\xb3\xc3\xf3\xbc\x8f\x3c\xcf\xfb\x18\x63\x0c\x8a\xa2\x84\x31\xc6\x12\x00\x60\xce\xb9\x00\x00\xee\xbb\x1f\x16\x42\x70\xc6\x98\xa8\xaa\xaa\x7a\xa2\xa3\xa3\xa3\x45\x08\x71\xfa\xfa\xf5\xeb\xcc\xd7\x86\x28\x16\x8b\x88\x10\x72\x36\x1e\x8f\x77\xca\xb2\x1c\xe3\x9c\x33\xff\x39\x8f\x10\x12\xaa\xab\xab\x33\x3e\xf8\xe0\x83\x3f\xe4\xf3\xf9\x4f\x43\x90\xc9\x64\xfa\xc6\xc6\xc6\x8e\x9c\x39\x73\xe6\xb7\x0b\x0b\x0b\x87\x16\x17\x17\x4f\xda\xb6\x9d\xd6\x34\x4d\xd1\x34\xad\x01\x21\x24\x71\xce\x39\x42\x08\x82\x1d\x31\xc6\x58\x28\x14\xfa\xfa\xfa\xf5\xeb\xbf\xe6\x79\xde\xa9\x54\x2a\xe5\xe9\xba\x8e\x74\x5d\x47\xa9\x54\x8a\x85\x42\xa1\xd1\x78\x3c\xfe\x12\x00\x94\x05\xf6\xcd\x39\xe7\xba\xae\xb7\x56\x54\x54\x8c\x8d\x8e\x8e\x7e\x68\x18\x06\xb1\x2c\x4b\x90\xb9\xb9\x39\xc9\x34\x4d\x64\x59\x16\xdc\xba\x75\xcb\x1e\x1b\x1b\xcb\x9f\x3f\x7f\xfe\x6a\x3a\x9d\x3e\xaa\x28\xca\x60\x65\x65\x65\xb5\xae\xeb\x8f\xfd\x0b\xd3\xf1\x34\x4d\x7b\xac\xa9\xa9\xa9\xf1\xf6\xed\xdb\xa7\x66\x67\x67\x71\xb1\x58\xe4\x94\x52\x69\x6c\x6c\xcc\x6c\x6b\x6b\x73\xaa\xab\xab\x9f\x09\x44\x19\x78\x49\x65\x65\xe5\x57\x32\x99\xcc\xd1\x3b\x77\xee\x88\xc0\x68\x78\x75\x75\xb5\x90\x24\x49\x14\x8b\xc5\x80\x19\x69\x7e\x7e\x1e\x5f\xbd\x7a\xf5\x6f\x63\x63\x63\x7f\x6a\x6a\x6a\x4a\x53\x4a\x77\x61\x8c\xcb\x03\x5a\x03\x10\xe1\x70\x78\x4b\x63\x63\x23\x9c\x3b\x77\xee\xbd\x92\x5c\x47\xf9\x7c\xfe\x6a\x5b\x5b\x5b\xb7\xaa\xaa\xeb\x7c\x06\x09\xe7\x5c\x84\xc3\xe1\xf5\x9a\xa6\xbd\x77\xf9\xf2\xe5\x19\x4a\x29\x21\xaf\xbd\xf6\xda\x1b\x5d\x5d\x5d\x2f\xee\xda\xb5\xab\xbb\xb3\xb3\x73\x43\x6b\x6b\xab\xb0\x6d\xfb\xee\xbd\x7b\xf7\x3c\x4a\xa9\x04\x00\x64\x70\x70\x30\xad\x28\xca\x5b\xb1\x58\xac\x4b\x92\xa4\xba\x12\x10\x88\x31\x06\x94\xd2\xae\xda\xda\xda\xf3\x17\x2e\x5c\x98\xa1\x94\x92\x68\x34\x8a\xb2\xd9\x2c\x6b\x6e\x6e\xbe\x5f\x5f\x5f\xff\x12\x63\x4c\xf8\x62\x66\x00\x80\xcb\xca\xca\xe0\xca\x95\x2b\x6f\x9b\xa6\x89\xc8\xfe\xfd\xfb\x13\xaa\xaa\x6e\xd6\x34\xad\xbd\xaa\xaa\xea\x99\x75\xeb\xd6\xbd\xda\xde\xde\xde\xf3\xf8\xe3\x8f\x2f\xa5\x52\xa9\x74\x3e\x9f\xe7\x86\x61\x28\x97\x2e\x5d\xfa\x84\x10\x32\xd0\xd2\xd2\xf2\x14\x21\xa4\x56\x08\x11\x98\x0e\x17\x42\x90\x9a\x9a\x9a\x66\xc7\x71\x7e\x9f\x4a\xa5\xb8\xaa\xaa\x50\x2c\x16\x61\x79\x79\x79\x6a\xeb\xd6\xad\xbb\x65\x59\x36\x84\x10\x3c\x28\xed\x8a\xa2\x18\x96\x65\x1d\xc9\x64\x32\x4b\x9f\x31\x22\xc6\x98\xe0\x9c\x63\x59\x96\xeb\x6a\x6a\x6a\xf6\x76\x74\x74\x6c\x53\x14\xe5\xfc\xe5\xcb\x97\x17\x63\xb1\x98\x92\x4c\x26\x2d\x4d\xd3\x46\xe2\xf1\xf8\x5e\x00\x28\xf7\x05\x86\x85\x10\x3c\x14\x0a\x35\x32\xc6\x26\x93\xc9\xe4\x44\x34\x1a\x25\xaa\xaa\x92\x3b\x77\xee\xb0\xed\xdb\xb7\x57\x54\x55\x55\x3d\x1d\x68\x41\x08\xc1\x55\x55\xd5\x1d\xc7\xb9\x9a\x4c\x26\x27\x70\x89\x0d\x93\x92\x66\x43\x38\x8e\xe3\xe9\xba\xbe\xfb\xb9\xe7\x9e\x1b\x79\xf9\xe5\x97\xe3\xd3\xd3\xd3\x8e\x61\x18\x4a\x7f\x7f\xff\xcd\x6c\x36\xfb\x63\x49\x92\x40\x08\x21\x02\x0b\xf7\x3c\x0f\x9a\x9b\x9b\x7f\xb0\x69\xd3\x26\x94\xcb\xe5\xb8\xaa\xaa\x1c\x00\x60\x76\x76\x76\x80\x73\xbe\x54\x62\x40\x9c\x31\x06\x8d\x8d\x8d\xbb\x28\xa5\x80\x89\x3f\x10\x42\x48\x08\xc1\xfd\x06\x03\x23\x84\x24\xc6\x98\x4b\x08\x69\xee\xed\xed\x3d\xf5\xc2\x0b\x2f\xd4\xe6\x72\x39\x87\x52\x4a\xfa\xfa\xfa\x0e\x17\x0a\x85\x61\x42\x08\x0e\xd6\x33\xc6\x20\x12\x89\x74\x75\x77\x77\x77\x95\x96\xf7\x64\x32\xf9\xe1\xca\xca\xca\x25\x42\x08\xf8\x9e\x82\x85\x10\x10\x0e\x87\x77\xd4\xd6\xd6\xca\x78\x79\x79\x79\x78\x79\x79\x79\x98\x73\x9e\x55\x14\x05\x61\x8c\x49\x49\x13\x2a\x33\xc6\x3c\x49\x92\x36\xee\xde\xbd\xfb\xd7\x7e\xe9\x46\x99\x4c\x06\xd2\xe9\xf4\x41\xbf\x70\x05\x2c\x7a\x9c\x73\x14\x8f\xc7\xbf\x4d\x29\x85\x5c\x2e\x07\x94\x52\x32\x3e\x3e\x0e\x77\xef\xde\xbd\x48\x08\x09\x18\x43\x9c\x73\x50\x55\x75\x7d\x67\x67\x67\x23\x49\xa7\xd3\x47\x0e\x1f\x3e\x7c\xc4\x71\x9c\x37\x1d\xc7\x79\x3f\x1a\x8d\x36\x6a\x9a\xd6\xe8\xc7\x0c\xf9\xe9\xc6\x75\x5d\xdf\x54\x56\x56\x76\x75\x78\x78\x38\x03\x00\xb8\x58\x2c\x4e\x6f\xdb\xb6\xad\x57\x92\xa4\x3a\x7f\x67\x0f\x17\x63\xac\xa5\x52\xa9\xdf\x98\xa6\xc9\xa2\xd1\x28\xb2\x2c\x4b\x6c\xd9\xb2\x25\x6c\x18\xc6\x7e\xbf\xc8\x81\x10\x02\x24\x49\x52\xef\xdf\xbf\x3f\x82\x01\x00\xe2\xf1\x38\x5c\xbf\x7e\xbd\xf8\xfa\xeb\xaf\x9f\xed\xef\xef\x7f\x32\x9f\xcf\xff\x4e\x96\x65\x1c\x30\xe1\xd7\x02\xd8\xb8\x71\xe3\xf7\x7d\x16\xc8\xf8\xf8\xb8\x97\xcf\xe7\x07\xfd\x9d\x71\x00\x40\x8c\x31\xd0\x34\x6d\x63\x67\x67\x67\x63\xd0\x63\x02\x00\x2c\x2d\x2d\xdd\xe4\x9c\x2f\x97\xb4\xfb\xdc\x3f\x6b\x34\x92\x83\x07\x0f\x42\x57\x57\x17\xec\xdc\xb9\x13\xca\xcb\xcb\x61\x60\x60\x40\x28\x8a\x72\xb6\xb9\xb9\xb9\x5b\x92\xa4\xfa\x20\x6e\x9c\x73\x14\x0a\x85\xd6\x62\x8c\xff\x78\xed\xda\xb5\x39\x00\x80\xcd\x9b\x37\x6b\xf5\xf5\xf5\xdf\x09\x76\x06\x00\x20\x49\x92\x6c\x9a\xe6\xb9\xd1\xd1\xd1\xdb\xba\xae\x63\xcb\xb2\x84\xeb\xba\x76\x7b\x7b\xfb\x7e\x59\x96\xab\x7c\x37\x05\x00\xc0\x9a\xa6\x4d\x63\x4d\xd3\x40\x96\x65\x28\x2f\x2f\x87\x9e\x9e\x1e\x78\xe5\x95\x57\x20\x91\x48\xac\x4c\x4e\x4e\xfe\xca\x57\x7a\xd0\xbc\x72\x8c\x71\x59\x24\x12\x69\x0f\x32\xc7\x75\xdd\x8c\x10\xa2\xf8\xe8\xce\x64\x59\x6e\x28\x69\x7a\xc1\xb6\x6d\x87\x73\x5e\xda\xeb\x21\x21\x04\xc8\xb2\x5c\x8b\x7d\x8f\x07\xcf\xf3\x40\x96\x65\xe8\xea\xea\x02\x00\x80\x85\x85\x85\x11\xce\xf9\xbc\x2f\x32\xe1\x7b\x39\x54\x56\x56\xae\x0b\x5e\x32\x33\x33\x63\xba\xae\xbb\xe0\x8b\x71\x35\x54\x75\x75\x75\xd5\x00\x00\xb9\x5c\x0e\x00\x00\xb9\xae\xcb\xfd\x77\xad\xa6\xae\x2f\xf2\xf2\x52\x1f\x00\xce\x39\xc8\xb2\x0c\x86\x61\xc0\xc8\xc8\xc8\xdc\x83\x07\x0f\x4c\x3f\x7d\x04\x00\x00\x63\x0c\xa2\xd1\x68\x8d\x7f\x96\x40\xd9\x6c\xd6\xf1\x3c\x6f\xc5\xa7\x54\x04\xa7\x2a\x49\x92\x74\x4a\xe9\xea\xab\x65\x59\x06\x00\x70\xe0\xb3\x67\xc0\x87\x47\xbd\xd2\xe3\x18\x00\x00\xe7\x1c\x6c\xdb\x86\x92\x9d\x7f\x5a\xbb\x09\x81\xf9\xf9\xf9\x4f\xfc\x9d\x05\x1f\x75\x1e\x5d\xb3\xb8\xb8\x38\x67\x9a\x26\x04\x20\x5c\xd7\x05\x21\xc4\x83\x60\x0d\xc6\x18\x6c\xdb\x06\x21\x04\xfe\x07\xf0\xfe\x68\x23\xa1\x26\xe2\x15\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xb5\x63\x9c\xa9\x30\x0a\x00\x00"))
	rootTermIco = gipf.HexToBytes("roottermico", []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x96\x09\x54\x13\xd7\xfe\xc7\x27\x40\x52\x64\x51\x16\x6b\x5d\x68\x1d\x46\x6c\x51\x08\x99\x04\x02\x21\x26\x2c\x1a\xd0\xa8\x41\x40\x56\x1b\x94\x90\x0c\x24\x40\x66\xc2\xcc\x40\x42\xa4\x88\x80\x56\x36\xa9\xb5\x75\x69\x81\x52\xb4\x8a\xd5\x88\xd6\xa5\x52\x2c\x8b\x68\xa8\x02\xa2\xad\x50\x10\x90\xba\x54\x45\x45\x04\x04\x14\x3c\xf8\x3f\xa1\x62\xff\xed\x3b\xcf\xf7\x5e\xef\x39\xf7\x9c\xe4\xde\xcf\xef\x7b\xef\xfd\x7d\x7f\xf7\x9e\xc9\x09\x0c\x58\x6e\x69\x36\xd7\x0c\x00\x00\x4b\xe1\x0a\x41\x30\x00\x00\xa0\xa1\x9b\xd2\x00\x00\x20\xb4\xda\xa7\x00\x00\x4c\x53\xad\x88\x24\x00\x60\xe7\x7e\x43\xa7\x64\x8d\x84\x55\x02\x80\xc9\x90\x22\x24\x82\x8c\x10\xad\xe6\x4a\x31\xa5\x8b\x44\x86\xc5\x20\x2e\x1a\xa5\x0a\x30\x34\x9e\xb7\x46\x25\x91\x26\x20\x24\x18\x83\xc4\x29\x50\x3e\xd4\x5f\x55\x03\x81\x0a\x19\x1f\x0a\x67\x8b\x60\x91\x6a\x19\x22\x57\xac\xd0\xe2\xc8\x5a\x6d\x40\x88\x54\x9b\x20\xf5\x94\x41\xde\x5e\x20\x4f\xc3\xd5\x28\x55\x4a\x84\x94\x80\x1a\x65\x22\x4a\x70\x35\x7c\x68\x52\x97\x8b\x12\x5c\xc3\x30\x03\x02\x27\x11\x32\x81\x0f\xf9\x1a\x26\xc0\x08\x51\x20\xb8\x0c\xc3\x11\x90\xed\xe2\x4e\x97\x32\xdd\x58\xa0\x87\xa7\x0b\xd3\x1d\xf6\x64\xb9\x39\x83\x2c\x98\xe9\xc1\x80\x3d\x18\x4c\x57\x3a\xcc\xe4\xc2\xee\x5c\x57\x4f\xf0\x55\x83\xbc\x40\x1e\x2e\x8b\xe5\x06\x0b\xfc\x5f\xad\x85\xcb\x62\xf9\x90\x9c\x24\x55\x5c\x06\x43\xad\x56\xbb\xa8\x5d\x5d\x30\x3c\x8e\xc1\xf4\xf4\xf4\x64\xc0\x2c\x06\x8b\x45\xc7\x65\xb1\x74\x22\x15\x25\x25\x1a\x3a\x4a\x2c\x98\x52\x10\x20\x84\x14\x57\xa8\x48\x05\x86\x82\x86\xff\x92\x18\x2c\x99\xe4\x43\xd0\xd4\x11\x94\xaa\xd7\xb2\x28\xf1\x2a\x4d\x52\x4c\xc9\xd0\x48\x54\x0c\xa6\x0b\xcc\x98\x02\x65\xd2\xd7\x9c\x2a\x19\x4f\x9c\x5c\x5c\x26\x65\x20\x89\x88\x12\x41\x49\x82\xc1\x74\x61\xbe\x66\x55\x72\x8c\xc4\x08\x39\xf6\x6f\xa4\x5f\x4f\xff\x65\x01\x8d\x52\x25\x12\xbd\x79\x2f\x4a\xe5\x6b\x9a\x20\xfd\x52\xc8\x37\xd3\x44\x48\xaa\x0a\x61\x04\x23\x04\x96\x8c\x4b\x11\xbf\x14\x04\x25\x17\x18\xc2\x55\xdc\x65\x38\x22\x21\x31\x3c\x04\xc3\x12\xa7\x8c\x0a\x9c\xda\x13\xb8\x6c\x99\xc1\x18\x0e\xe8\x18\xae\x40\x65\x98\x9a\x58\xf4\xff\x62\x10\x81\x84\x44\xf8\x10\x0b\x66\x7a\xd2\x61\x37\x3a\x93\x15\xc2\x62\x72\xd9\x1e\x5c\x98\xed\x04\xb3\xb8\x30\xfc\x07\x2a\xc2\x64\x8a\xd8\xd4\x7f\x45\x59\x5c\x83\xcd\x9e\x7f\x41\x11\x52\x22\x93\x90\x92\xff\x08\xcb\xa4\xdc\x58\x0c\x57\x4a\x48\x3e\xa4\x50\x4a\xe2\x10\x86\x0a\x8d\x83\xc0\xd7\x99\xe4\x2e\xc3\x12\x31\x5c\x84\xc9\x10\x3e\xe4\x3a\x29\x2d\x12\x71\x85\x28\x41\x4a\x50\x29\x22\x14\xf0\x21\x8d\x52\xe5\xa2\x50\xc8\xb8\x2c\x19\x9b\xe3\xc1\x46\xa4\xf4\xd8\x58\x09\x93\xce\x71\x77\xf3\xa4\x4b\x10\x16\x93\x1e\xcb\x81\x61\x36\xc2\x81\x39\x6c\x76\xec\x54\xbc\x00\x93\x26\x1b\xcc\x9d\x8a\x97\xfd\x8f\xf1\x6b\x70\x45\x9c\x02\x95\x24\xfe\x63\x1d\xc3\x95\x9b\x54\x5a\xa1\x20\x48\x0c\x4f\x7d\x55\xd2\x6b\x91\xa4\x57\xbf\x12\x15\xe0\x64\x21\x70\x25\x52\x43\x81\xf3\x21\xe9\xa4\x4b\x32\xe8\xd5\xb0\xe2\x1f\x67\xe0\x8f\x78\xb5\x1c\x41\xdf\x68\xf7\x1f\x18\x81\xc5\x92\x6a\x09\x8e\xf8\xc6\x21\x28\xf9\xdf\x54\x14\xc3\x0b\xe4\x31\xfe\x3c\x0a\xe3\xef\xa7\x64\xfc\xed\xe6\x4e\x0d\x05\x0b\xfc\x27\xf1\xa9\x77\xc8\x0b\xfc\xf3\x25\x43\x50\x19\x1f\xc2\x21\x6f\xaf\xbb\x22\xad\x06\x00\xa8\xc3\x42\x81\x6f\x48\xc4\x96\x53\xbb\x45\x85\x76\xad\x6f\x6f\xfd\xea\xc3\xd0\x6e\x7e\xc9\x81\x9c\xfb\x67\x04\x2f\x28\xb9\xce\xfe\xb6\xaa\xa5\xc7\xb2\xf7\x39\x86\x65\xdb\x99\xd8\xd8\x76\x0e\xd2\x56\x5d\x3c\x67\x63\xe3\xbd\xd9\x32\xef\xc8\xb3\x19\xa7\xfd\x63\xea\x32\x35\xbe\xb2\x0e\xeb\x5d\x96\xd6\x4b\xdb\x85\x67\x73\x7c\x4c\x2e\xe4\x05\x1d\x61\xe6\x36\xcc\x2f\xdf\xfa\xde\xf7\x7c\x7e\x77\x6b\xe8\xa8\xdd\xac\x64\x6c\x38\xb9\xaa\x58\xb6\xb9\x70\xec\x7e\x4a\x78\x68\xcf\x50\xc9\x68\x5a\xd7\x5a\xff\x50\x4a\x60\xa8\x34\x9f\x52\xee\xc2\xe3\x32\xd1\x50\xe0\x36\x85\x23\x2c\xf2\x5a\x6c\x45\x73\x2c\x0e\xa3\xd5\x8c\x3d\xf8\xea\xee\xe0\xef\xab\x7e\xc0\x7a\xcc\xab\xd6\xa7\x0d\x84\x1f\xbc\xc5\x49\x5f\x17\x9a\x07\xf4\x8e\x2e\x8c\xcf\x57\x18\x6d\x98\xf1\x71\x7d\x0f\xfb\xcb\xe6\x0f\x93\xec\xe6\x79\x8d\x37\x52\x8d\x55\x83\x77\x72\xbc\x23\x12\xd8\x2d\x84\x13\x34\xe6\xb8\xdf\x79\xd5\xf1\xb6\x07\x7a\xbd\xfe\x26\xaf\x25\xa8\x95\x93\xd3\x7a\xbf\x42\xed\xda\x13\xcf\x56\x1b\x9d\x4f\x3a\xf2\x65\xd6\xe6\xae\xea\xe4\x3c\xc7\xdc\xda\xd9\x16\xd1\xf9\x75\xb3\x8d\xf5\x56\xa9\x5e\xcd\xd9\x0e\xd4\x90\x53\xc1\x3e\x7e\x0f\x36\xb6\xad\x4b\x79\xd4\x25\xdc\x98\xbe\xde\xcf\xa1\x0d\x7c\x9c\x53\x96\xdf\x56\xbb\x2e\x21\x34\x9b\x23\x6c\xba\x60\xfe\x4e\x59\xcd\x7b\x4b\xf4\x25\x17\xfc\xe6\x3a\x39\x35\x7d\xb3\x88\xf0\x31\x97\x9f\x5c\xe7\x96\x71\xa6\x5b\x7f\x72\xdd\x29\xeb\x8e\xae\xfd\x76\x85\x8b\x86\x8a\x98\xb0\xd1\xd6\xc8\xad\x51\xe2\x3b\xd7\x2f\x99\xd5\x3c\xfb\xcd\x78\xfa\x8f\x13\x3f\xe4\x9a\xb6\x5d\x1f\xdb\x24\xec\xdb\x9c\x5b\x17\x52\xf2\xd9\x3e\xeb\x16\x63\x73\x9f\x4f\x0f\x9c\xac\x8a\x3a\x4d\x69\x5e\x5f\x98\x52\x25\x22\x60\xb0\x77\x78\x9b\x31\xe0\x17\xdd\xfe\x10\x16\x2d\xca\x68\x00\xe6\x14\x2c\x6e\x03\xa6\xb5\x0b\x01\xe7\xd2\x4b\x0e\xa3\x05\xbe\x00\xdd\x0c\x8a\x3e\xf6\x5d\x26\xd0\x99\x81\x9d\xc8\xef\xf3\x71\x12\x49\x94\xba\x1b\x8e\x34\xe8\x71\x8b\x98\x7a\x9f\xb4\xca\x70\xfc\xb6\x62\x0b\x90\xc6\xb1\x7e\x67\x89\xd8\x79\x01\x88\xba\xb5\x37\xb1\x72\x7f\x47\xf4\x1f\xac\xc1\xa5\x49\x3b\x06\xf6\xba\x3e\xbd\xa1\xcd\xe3\x35\x82\x22\x27\xcb\xfc\x8d\x88\x76\x58\x12\xee\x97\x4c\x03\xc4\x46\xa9\x34\x40\xaf\x9b\xe5\x31\xda\x7f\xaf\xe1\xe3\x19\x27\x86\xae\xd8\xa3\x67\x9f\xda\x98\x2f\x2f\xb4\xa1\xd3\x07\xe6\x67\xa0\xbb\x5f\x2e\xcf\x27\xe2\xcf\xd5\xee\x6f\x16\x04\x5e\x3d\x28\xa7\x9e\xe3\xbb\xd3\x1e\x3f\xea\x69\xb9\xda\xb8\x3b\x15\x6f\x98\xfe\x73\x54\xd5\xb3\xbe\x41\x56\x44\xe3\xe3\xac\xb7\x7a\xc5\x3f\x5e\x1a\x76\xf0\x5d\x52\xac\xbd\x1d\xb8\xf7\xb8\x36\xa5\xde\x21\x3f\x10\xa4\x9e\x67\x96\xe6\xae\x7c\x3b\xb3\x6d\xf8\x61\x5a\xfa\x88\xf3\xe8\xd8\x47\x8f\xbb\x2b\xeb\x6b\xbc\x26\x66\xdb\x36\x24\x8a\xab\xf4\x77\x3b\x4e\xf0\xae\xf6\x4b\x1f\x77\x1b\xbf\xdf\xd7\x6c\x74\xeb\x5a\xd6\x40\x0d\xff\x17\x28\xd8\xf5\x53\x0d\x2d\x6d\x7a\xb6\x1c\xe1\x1d\xa8\xa9\xde\x5e\x1e\x23\x68\x7f\x34\x4a\xf9\x69\xf9\x82\xc1\xf4\xf9\xbd\x29\xf6\x2d\x3b\x02\x0e\x2e\xae\x3b\x75\x6a\x6e\x46\x31\xed\xf6\xa8\x1a\x38\x6b\x82\x94\x87\x0e\x05\x22\x89\xd1\xa6\x16\xb3\x66\x45\x68\x87\x44\x5f\x08\x33\x73\x9f\x34\x4a\x1b\xac\x12\x9e\x5f\x3d\xd1\x12\x6c\xe7\x7d\xb9\x55\x7d\xc3\x5e\xb4\xd6\xa1\x71\x45\xf9\xd8\x79\x37\xdb\x74\x04\xbf\xdf\x7c\xd4\x08\xf9\xb9\x0e\xd7\x45\xec\x7d\x39\xb8\x6a\xe2\x99\x7e\x9e\xac\x27\xad\x7e\xac\xaf\xb3\x28\x7d\x5c\x59\xc6\xb9\x7b\xfd\x42\xde\x8b\xf1\x6e\xf5\xf3\x9b\xcf\x87\x66\x36\x36\xfe\x54\x49\x3c\x0d\x28\x8a\x36\x76\x8c\xea\xeb\x04\xb6\x15\x9e\xf9\x16\x9a\x81\xf8\x64\xb6\x97\x07\x03\xba\x2a\x75\xc7\xc4\xc4\xb8\xf8\xa3\xe1\xd0\x2f\xa0\x17\xbf\xd5\xcf\xa8\x1c\xbb\xe4\xf4\x34\xa0\xf8\xd6\xa1\x6f\x16\x96\xa4\xf7\xb1\xcd\x12\x14\x7a\xe6\x86\x8a\xa3\xb8\x79\xbb\xd7\x85\xcc\xb7\x3e\xdd\xb8\xeb\x65\x82\x69\xd1\xfb\xdb\x8f\x9e\x75\xd4\x38\x8b\x2a\x37\xbe\xe0\x10\xb5\x3b\x6b\xbf\x67\xd4\x34\xdd\xf6\x79\xa9\xb7\x9c\x98\xe8\x3d\x28\x40\x72\x1c\xa6\x1d\xa9\xf8\x85\xaa\x8f\xd4\xcf\x9e\x6d\xbc\x65\xdf\xa6\x47\x16\x87\x88\x27\x14\x20\xa9\x91\x5a\x17\x74\xcd\xca\x7e\x70\xa0\x91\x75\x7d\xe3\xc8\x15\xc0\xff\xf0\xe1\xa6\xfe\xee\xbc\x91\xf1\x93\xde\x63\xdb\x52\xc5\x05\x55\xcd\xe7\xe7\xd0\x8d\x66\x9d\x33\x7b\xa2\x8f\x63\x81\x8b\x93\x4d\x1d\xe4\x73\x17\xc2\xe2\xa8\x0b\x46\x96\x3e\x47\xc5\x5f\x53\x04\x8a\x95\x33\x8b\xa8\xee\x2d\xc7\x23\xc3\xe6\xb9\x14\xdd\x5b\xf9\xf9\x1a\x7a\xc2\xe1\x95\xe3\x1b\xec\x9f\xe8\x13\xa2\x51\xd7\xfe\x43\x15\x0f\x1d\x1b\x1f\x9c\x7e\x98\x70\xa3\x81\x27\xb3\x2f\x99\x5d\x0e\xf0\xf2\x29\x9f\x3f\x38\x40\x13\x95\x8d\x6c\x5f\x9c\xc3\x2b\x9e\xf8\x6d\x60\xe1\x4c\xf7\x79\x33\x4a\x2d\x4a\x8a\xdb\x3f\x29\x35\xcb\xf4\xbf\x33\xc7\xaa\x10\x37\xcb\x88\x8b\x79\x64\x91\xfd\xc1\x86\x9f\x56\xb7\xa7\x1d\x50\x3f\xb9\x16\x7e\x58\xd7\x72\xc0\x04\x8c\x0f\x98\xbb\xe3\xd7\x48\x1b\xed\x9c\x12\xed\x4d\xfe\x1e\xfe\xea\x95\x81\x94\xb6\xcb\xab\xcf\x09\x77\xc2\xe8\x23\x56\x01\x6d\xc7\x12\xf4\xa0\x47\x09\xda\x69\xf5\x9e\x6e\xe7\x3d\xd1\xbe\xa0\x42\xb2\xda\x68\xe9\xd6\x04\xe0\x99\x49\x10\x22\xde\x95\x9f\xa1\x2b\x2b\x55\x5d\x74\x37\x3f\x5f\xef\xc0\xa3\xce\x2b\x9e\xee\x09\x87\xef\xf2\x7d\xbb\xc9\xee\xa2\xf8\x85\xee\xf7\x43\x5b\xa8\x13\x49\x77\x4c\x23\xbf\xcf\xe3\xab\x4a\xab\x31\xb1\xfc\xb3\xf1\x1e\x97\xa6\x6b\xa7\x72\xb7\xc7\x97\x16\xdc\xde\xa3\xbb\x57\x22\xed\x77\x6d\x29\x6d\xfb\xe1\xb6\x26\xcc\x86\xbb\xa0\xfe\x66\x60\x7a\x35\x36\x9f\x71\x76\xb4\x84\xe8\x78\xf6\xdc\xc4\x76\x8f\xe9\x07\xb7\xae\xe4\x5c\x4c\x5f\xc9\x8e\x91\x53\x03\xb3\x75\x3a\x3a\xf5\x56\xfc\x15\x77\x5b\xc0\x12\x0e\x8a\x5c\x71\xa2\x63\x69\xa8\x34\x88\x9d\x13\xff\xb9\xb9\x3e\xba\xdc\x1f\xb7\x0d\xed\x39\xdc\x52\x4f\x71\x6c\x5d\x6d\xef\x98\x0b\x96\x95\x9f\xeb\xea\xb2\xfb\xf6\xca\xc3\x61\x3d\x12\xf9\xa3\xdd\xc2\xb0\xcf\xa2\xbc\xeb\x12\x47\xbc\x23\xab\x48\xc5\x40\x1e\xea\xf1\x51\xd7\xac\xd3\x78\xd7\x19\xb1\xc7\xe5\x4d\xa3\xdb\x9f\xf8\x4c\xd3\xec\x18\xef\x20\xcb\x01\x3f\xc1\x42\x54\x50\xb0\xbe\x62\xb4\xa3\xf7\x97\x4d\x13\x9d\x75\x59\x35\x94\x4f\x1c\x58\xc7\x74\xcd\xd1\xe9\x9d\x63\x95\x6b\x2e\xbf\x9c\x18\xd2\xd9\x1f\x9f\x63\x6d\x1d\x52\xb6\x95\x66\xb2\x87\xe0\x46\xe9\xbe\x5c\x5b\xb3\x6f\xee\x41\x23\xc1\xbb\xa7\x69\xc6\xd5\xf2\x93\xdb\x2d\xf2\x73\x2c\x4a\x2f\xb6\xd7\xee\xf5\xfe\xfa\xad\x5d\x67\x82\x77\x55\x55\x6c\x1b\x97\x1e\x6b\xc8\xc2\x7f\xed\x3d\xd9\x94\xc6\xa9\xad\x6c\x35\x09\x6b\xe6\x2d\xc8\x4a\xc2\x1a\x3c\xb0\x1b\x32\xa5\xb2\xc0\x41\x58\xdd\xbf\xfb\x6a\x47\x99\x7c\x66\xdd\x9a\x4d\x23\xbc\x24\xbb\xa1\x77\xbf\xfb\xc6\x89\xa5\x44\xa6\xc5\x1b\xbe\x72\x85\x7e\x01\x82\xa3\x4b\xa3\x33\xff\x2f\x00\x00\xff\xff\x19\xfc\x59\x03\x42\x0b\x00\x00"))
)
